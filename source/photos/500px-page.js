// Generated by CoffeeScript 1.6.3
(function() {
  var CategoryTexts,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _500px.init({
    sdk_key: '5992835139899cd226bae4ac9b7fe4c08412afaa'
  });

  CategoryTexts = {
    0: "Uncategorized",
    10: "Abstract",
    11: "Animals",
    5: "Black and White",
    1: "Celebrities",
    9: "City and Architecture",
    15: "Commercial",
    16: "Concert",
    20: "Family",
    14: "Fashion",
    2: "Film",
    24: "Fine Art",
    23: "Food",
    3: "Journalism",
    8: "Landscapes",
    12: "Macro",
    18: "Nature",
    4: "Nude",
    7: "People",
    19: "Performing Arts",
    17: "Sport",
    6: "Still Life",
    21: "Street",
    26: "Transportation",
    13: "Travel",
    22: "Underwater",
    27: "Urban Exploration",
    25: "Wedding"
  };

  this.Photo500px = (function(_super) {
    __extends(Photo500px, _super);

    function Photo500px(element) {
      this.hideScore = __bind(this.hideScore, this);
      this.showScore = __bind(this.showScore, this);
      this.restoreExif = __bind(this.restoreExif, this);
      this.showExif = __bind(this.showExif, this);
      this.toggleExif = __bind(this.toggleExif, this);
      Photo500px.__super__.constructor.apply(this, arguments);
    }

    Photo500px.prototype.bindDom = function() {
      this.exifPanel = this.element.find('.exif');
      this.exifButton = this.element.find('.exif-button');
      this.scorePanel = this.element.find('.score');
      return this.image = this.element.find('img');
    };

    Photo500px.prototype.enhancePage = function() {
      this.exifButton.click(this.toggleExif).hover(this.showExif, this.restoreExif);
      return this.image.hover(this.showScore, this.hideScore);
    };

    Photo500px.prototype.initialize = function() {
      this.takenAt = new Date(this.taken_at).toLocaleDateString();
      this.fullUrl = "http://500px.com" + this.url;
      return this.categoryText = CategoryTexts[this.category];
    };

    Photo500px.prototype.toggleExif = function() {
      this.exifButton.toggleClass('on');
      return this.restoreExif();
    };

    Photo500px.prototype.showExif = function() {
      return this.exifPanel.toggleClass('on', true);
    };

    Photo500px.prototype.restoreExif = function() {
      return this.exifPanel.toggleClass('on', this.exifButton.is('.on'));
    };

    Photo500px.prototype.showScore = function() {
      return this.scorePanel.addClass('on');
    };

    Photo500px.prototype.hideScore = function() {
      return this.scorePanel.removeClass('on');
    };

    return Photo500px;

  })(Widget);

  this.Gallery500px = (function(_super) {
    __extends(Gallery500px, _super);

    function Gallery500px(element) {
      this.hashChanged = __bind(this.hashChanged, this);
      this.parseHash = __bind(this.parseHash, this);
      Gallery500px.__super__.constructor.apply(this, arguments);
      this.totalPages = ko.observable(0);
      this.currentPage = ko.observable(0);
      this.photos = ko.observableArray();
    }

    Gallery500px.prototype.bindDom = function() {
      this.applyBindings();
      return $(window).on('hashchange', this.hashChanged);
    };

    Gallery500px.prototype.parseHash = function() {
      var item, items, k, result, v, _i, _len, _ref;
      result = {};
      items = location.hash.slice(1).split('&');
      for (_i = 0, _len = items.length; _i < _len; _i++) {
        item = items[_i];
        _ref = item.split('='), k = _ref[0], v = _ref[1];
        if ((k != null) && (v != null)) {
          result[k.toLowerCase()] = v;
        }
      }
      return result;
    };

    Gallery500px.prototype.hashChanged = function() {
      var hash;
      hash = this.parseHash();
      if (hash.username != null) {
        return this.reload(hash.username);
      }
    };

    Gallery500px.prototype.initialize = function() {
      return this.reload('timnew');
    };

    Gallery500px.prototype.reload = function(username) {
      var _this = this;
      return _500px.api('/photos', {
        feature: 'user',
        username: username,
        image_size: [3],
        page: 1,
        rpp: 100
      }, function(response) {
        var data;
        if (response.error) {
          return;
        }
        data = response.data;
        console.log(data);
        _this.totalPages(data.total_pages);
        _this.currentPage(data.current_page);
        return _this.photos(data.photos);
      });
    };

    return Gallery500px;

  })(Widget);

}).call(this);
