// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _500px.init({
    sdk_key: '5992835139899cd226bae4ac9b7fe4c08412afaa'
  });

  this.Photo500px = (function(_super) {
    __extends(Photo500px, _super);

    function Photo500px(element) {
      this.restoreExif = __bind(this.restoreExif, this);
      this.inverseExif = __bind(this.inverseExif, this);
      this.toggleExif = __bind(this.toggleExif, this);
      Photo500px.__super__.constructor.apply(this, arguments);
    }

    Photo500px.prototype.bindDom = function() {
      this.exifPanel = this.element.find('.exif');
      return this.exifButton = this.element.find('.exif-button');
    };

    Photo500px.prototype.enhancePage = function() {
      return this.exifButton.click(this.toggleExif).hover(this.inverseExif, this.restoreExif);
    };

    Photo500px.prototype.initialize = function() {
      this.takenAt = new Date(this.taken_at).toLocaleDateString();
      return this.element.find('.fluidbox').fluidbox();
    };

    Photo500px.prototype.toggleExif = function() {
      this.exifButton.toggleClass('on');
      return this.exifPanel.toggleClass('on', this.exifButton.is('.on'));
    };

    Photo500px.prototype.inverseExif = function() {
      return this.exifPanel.toggleClass('on', !this.exifButton.is('.on'));
    };

    Photo500px.prototype.restoreExif = function() {
      return this.exifPanel.toggleClass('on', this.exifButton.is('.on'));
    };

    return Photo500px;

  })(Widget);

  this.Gallery500px = (function(_super) {
    __extends(Gallery500px, _super);

    function Gallery500px(element) {
      Gallery500px.__super__.constructor.apply(this, arguments);
      this.totalPages = ko.observable(0);
      this.currentPage = ko.observable(0);
      this.photos = ko.observableArray();
    }

    Gallery500px.prototype.bindDom = function() {
      return this.applyBindings();
    };

    Gallery500px.prototype.initialize = function() {
      return this.reload();
    };

    Gallery500px.prototype.reload = function() {
      var _this = this;
      return _500px.api('/photos', {
        feature: 'user',
        username: 'timnew',
        image_size: [3, 4],
        page: 1
      }, function(response) {
        var data;
        if (response.error) {
          return;
        }
        data = response.data;
        console.log(data);
        _this.totalPages(data.total_pages);
        _this.currentPage(data.current_page);
        return _this.photos(data.photos);
      });
    };

    return Gallery500px;

  })(Widget);

}).call(this);
