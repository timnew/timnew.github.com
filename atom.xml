<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ThoughtWorkshop</title>
  <subtitle>Digital Bigs in my thought</subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://pubsubhubbub.superfeedr.com/" rel="hub"/>
  <link href="http://timnew.me/"/>
  <updated>2016-04-12T14:58:03.000Z</updated>
  <id>http://timnew.me/</id>
  
  <author>
    <name>TimNew</name>
    <email>timnew.wti@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>A clean way to test rejected promise</title>
    <link href="http://timnew.me/blog/2015/08/14/a-clean-way-to-test-rejected-promise/"/>
    <id>http://timnew.me/blog/2015/08/14/a-clean-way-to-test-rejected-promise/</id>
    <published>2015-08-14T08:08:53.000Z</published>
    <updated>2016-04-12T14:58:03.000Z</updated>
    
    <content type="html">&lt;p&gt;To test the the exception in a rejected promise could be a little bit painful.&lt;/p&gt;
&lt;p&gt;And &lt;a href=&quot;https://mochajs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mocha&lt;/a&gt; is Promise-friendly, which means it fails the test if exception is not caught.&lt;/p&gt;
&lt;p&gt;So as a result, here is a simple code example to explain how it is being done:&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it &lt;span class=&quot;string&quot;&gt;&#39;should throw session-expired exception&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Session().generateId().bindUserFromRedis()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .&lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (ex) -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .&lt;span class=&quot;keyword&quot;&gt;then&lt;/span&gt; (ex) -&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    expect(ex).to.be.&lt;span class=&quot;keyword&quot;&gt;instanceof&lt;/span&gt;(ResponseError)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              .&lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt;.that.have.property(&lt;span class=&quot;string&quot;&gt;&#39;errorName&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;session-expired&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; A Chai Plugin can mitigate the pain&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it(&lt;span class=&quot;string&quot;&gt;&#39;should throw session-expired exception&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; expect(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Session().generateId().bindUserFromRedis())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           .to.evetually.rejected&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              .and.that.have.property(&lt;span class=&quot;string&quot;&gt;&#39;errorName&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;session-expired&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;Update 2:&lt;/strong&gt; With async, it can be converted into normal test&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;it(&lt;span class=&quot;string&quot;&gt;&#39;should throw session-expired exception&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; expect(&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Session().generateId().bindUserFromRedis())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          .to.throw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;             .and.that.have.property(&lt;span class=&quot;string&quot;&gt;&#39;errorName&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;session-expired&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;To test the the exception in a rejected promise could be a little bit painful.&lt;/p&gt;
&lt;p&gt;And &lt;a href=&quot;https://mochajs.org/&quot; target=&quot;_blank&quot; 
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="JavaScript" scheme="http://timnew.me/categories/programming/javascript/"/>
    
    
      <category term="JavaScript" scheme="http://timnew.me/tags/javascript/"/>
    
      <category term="Promise" scheme="http://timnew.me/tags/promise/"/>
    
      <category term="Test" scheme="http://timnew.me/tags/test/"/>
    
      <category term="Mocha" scheme="http://timnew.me/tags/mocha/"/>
    
  </entry>
  
  <entry>
    <title>Typical EventBus Design Patterns</title>
    <link href="http://timnew.me/blog/2014/12/06/typical-eventbus-design-patterns/"/>
    <id>http://timnew.me/blog/2014/12/06/typical-eventbus-design-patterns/</id>
    <published>2014-12-06T08:37:41.000Z</published>
    <updated>2016-01-31T16:21:00.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;EventBus&lt;/code&gt; is an special &lt;a href=&quot;`Pub &amp;amp; Sub`&quot;&gt;Publish &amp;amp; Subscribe Pattern&lt;/a&gt; implementation. &lt;code&gt;EventBus&lt;/code&gt; enable message to be delivered between components without requiring the components to register itself to others.&lt;/p&gt;
&lt;p&gt;Comparing &lt;code&gt;EventBus&lt;/code&gt; to other &lt;code&gt;Pub &amp;amp; Sub&lt;/code&gt; implementations, &lt;code&gt;EventBus&lt;/code&gt; is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Designed to replace the original event distribution system, which requires the components register itself to each other.&lt;/li&gt;
&lt;li&gt;Not designed for general use, &lt;code&gt;EventBus&lt;/code&gt; adds additional complexity and runtime overhead to the system. So it is not designed to replace normal method calls.&lt;/li&gt;
&lt;li&gt;Not designed for inter-process communication as some other Pub&amp;amp;Sub.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;EventBus-saves-Android-developers’-life&quot;&gt;&lt;a href=&quot;#EventBus-saves-Android-developers’-life&quot; class=&quot;headerlink&quot; title=&quot;EventBus saves Android developers’ life&quot;&gt;&lt;/a&gt;&lt;code&gt;EventBus&lt;/code&gt; saves Android developers’ life&lt;/h2&gt;&lt;p&gt;When developing Android application, I strongly recommend developer to introduce an &lt;code&gt;EventBus&lt;/code&gt; library. &lt;a href=&quot;https://github.com/greenrobot/EventBus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EventBus&lt;/a&gt; from &lt;code&gt;GreenRobot&lt;/code&gt;, &lt;a href=&quot;http://square.github.io/otto/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Otto&lt;/a&gt; from &lt;code&gt;Squqre&lt;/code&gt; are good solutions. Or even to choose the original &lt;code&gt;EventBus&lt;/code&gt; in &lt;a href=&quot;https://code.google.com/p/guava-libraries/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Guava&lt;/a&gt; library from Google.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;EventBus&lt;/code&gt;, components can communicate with each other without need to hold direct reference of each other. This is very important to avoid app crashes when calling a method on a detached or destroyed component. Usually this kind of issue isn’t that easy to handle due to Android’s over-complicated life cycle management. So even in the worst case that one component is sending message to another component which has been destroyed (which should unregister itself from EventBus on that time), it only triggered a &lt;code&gt;norecipient waring&lt;/code&gt; instead of crashing the app.&lt;/p&gt;
&lt;p&gt;Also with &lt;code&gt;EventBus&lt;/code&gt; as intermedia, you can avoid to exposing objects to root activity or application just for registering callbacks on each other. Components are higher cohesion &amp;amp; lower coupling.&lt;/p&gt;
&lt;p&gt;As the result, &lt;code&gt;EventBus&lt;/code&gt; saves tons of time to debugging crash, and make your code more readable, maintainble, extensible, and flexible.&lt;/p&gt;
&lt;h2 id=&quot;Abusing-EventBus-kills-your-app-easily&quot;&gt;&lt;a href=&quot;#Abusing-EventBus-kills-your-app-easily&quot; class=&quot;headerlink&quot; title=&quot;Abusing EventBus kills your app easily&quot;&gt;&lt;/a&gt;Abusing &lt;code&gt;EventBus&lt;/code&gt; kills your app easily&lt;/h2&gt;&lt;p&gt;“&lt;code&gt;EventBus&lt;/code&gt; is awesome! It is so convenient, so let’s replace everything with event”… This kind of saying is commonly heard from the developers who just realized the benefits from &lt;code&gt;EventBus&lt;/code&gt;. Since &lt;code&gt;EventBus&lt;/code&gt; is too convenient to use, they tends to replace everything with EventBus.&lt;/p&gt;
&lt;p&gt;But we mentioned in the introduction of &lt;code&gt;EventBus&lt;/code&gt; that &lt;code&gt;EventBus&lt;/code&gt; is design to replace traditional event system in Java, and is not designed for general use. Abusing makes your code hard to understand, hard to debug. Long event chain is a common reason that cause of unexpected behavior.&lt;/p&gt;
&lt;h2 id=&quot;Broadcast-Event-Command-and-Request&quot;&gt;&lt;a href=&quot;#Broadcast-Event-Command-and-Request&quot; class=&quot;headerlink&quot; title=&quot;Broadcast Event, Command and Request&quot;&gt;&lt;/a&gt;Broadcast Event, Command and Request&lt;/h2&gt;&lt;p&gt;&lt;code&gt;EventBus&lt;/code&gt; is powerful, but can be easily abused. To make a better use of EventBus, I learn a number of EventBus usages, and evaluated the scenario, and summarized out 3 typeical EventBus usage patterns: &lt;strong&gt;Broadcast Event&lt;/strong&gt;, &lt;strong&gt;Command&lt;/strong&gt; and &lt;strong&gt;Request&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Broadcast-Event&quot;&gt;&lt;a href=&quot;#Broadcast-Event&quot; class=&quot;headerlink&quot; title=&quot;Broadcast Event&quot;&gt;&lt;/a&gt;Broadcast Event&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Broadcast Event&lt;/code&gt; is a special kind of event that used by a specific component to broadcast its status updated to other components.&lt;/p&gt;
&lt;h4 id=&quot;Declaration&quot;&gt;&lt;a href=&quot;#Declaration&quot; class=&quot;headerlink&quot; title=&quot;Declaration&quot;&gt;&lt;/a&gt;Declaration&lt;/h4&gt;&lt;p&gt;&lt;code&gt;Broadcast Event&lt;/code&gt; should be used when several components cares about the specific component’s status update. So usually &lt;code&gt;Broadcast Event&lt;/code&gt; should have more than one recipients or, at least, potential recipients.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Broadcast Event&lt;/code&gt; should be an immutable data object, so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is immutable, so once it is created, its status should not changed, which guarantees the equality between recipients.&lt;/li&gt;
&lt;li&gt;It is data object, so it should not has methods that might change other classes status.&lt;/li&gt;
&lt;li&gt;It might have methods that helps its consumer to consume the data it contains.&lt;/li&gt;
&lt;li&gt;It should be declared as a nested static class of publisher.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt;&lt;br&gt;If you thought a Event is “Broadcast Event”, but later you found it has only one recipient, then you might need to consider refact it into a &lt;code&gt;Command&lt;/code&gt; or a &lt;code&gt;Request&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Command&quot;&gt;&lt;a href=&quot;#Command&quot; class=&quot;headerlink&quot; title=&quot;Command&quot;&gt;&lt;/a&gt;Command&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Command&lt;/code&gt; is a special kind of event that has the ability to update specific object or specific type of objects. In most cases, &lt;code&gt;Command&lt;/code&gt; should have only one recipient. In some special cases, it might has a group of recipients with exactly same type.&lt;/p&gt;
&lt;p&gt;Precisely, the latter case is a variant of &lt;code&gt;Command&lt;/code&gt; pattern, &lt;code&gt;Batch Command&lt;/code&gt;, which works as same as &lt;code&gt;Command&lt;/code&gt; but have multiple recipients so it can update multiple instances in a batch.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Command&lt;/code&gt; should be a immutable object that able to update specific object, so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It should have 1 &lt;code&gt;execute&lt;/code&gt; method with 1 parameter, which represents the target that the command updates.&lt;/li&gt;
&lt;li&gt;When invoking execute method shouldn’t change its own status, so it does exactly same thing when applying it to multiple targets.&lt;/li&gt;
&lt;li&gt;It behavior should be stable across time, so its behavior won’t change when it is apply asynchronously.&lt;/li&gt;
&lt;li&gt;The object that &lt;code&gt;execute&lt;/code&gt; method accepts is not necessarily to be the recipient. It could be the object that recipient holds or it has access to.&lt;/li&gt;
&lt;li&gt;It should be declared as nested static class of the recipient.&lt;/li&gt;
&lt;li&gt;If recipient accepts multiple events, these events are recommended to derived from the same base class. So The recipient could subscribe to the base class, rather than every command.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt;&lt;br&gt;&lt;code&gt;Command&lt;/code&gt; can be seen as recipient’s special method that can be invoked without known recipient instance. So its behavior should fully contained in the class. The subscribing method on recipient should contain one line of code to invoke &lt;code&gt;execute&lt;/code&gt; method on command.&lt;/p&gt;
&lt;h3 id=&quot;Request&quot;&gt;&lt;a href=&quot;#Request&quot; class=&quot;headerlink&quot; title=&quot;Request&quot;&gt;&lt;/a&gt;Request&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Request&lt;/code&gt; is a special kind of event that has the ability to accept data from another object. If the request has multiple recipients, to avoid ambiguous behavior, there should be only one of &lt;code&gt;Request&lt;/code&gt;‘s respond the request.&lt;/p&gt;
&lt;p&gt;But there is one exception, that is for the request collects data from multiple objects, multiple objects might respond to the request. This special kind of &lt;code&gt;Request&lt;/code&gt; is called &lt;code&gt;Collector&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Request&lt;/code&gt; should be a object that accept data from recipient, so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It should have &lt;code&gt;respond&lt;/code&gt; method with 1 parameter, which represents the data the request asks for.&lt;/li&gt;
&lt;li&gt;Request should contains enough information for the recipients to determine whether to respond the request.&lt;/li&gt;
&lt;li&gt;The recipients should check request’s status to determine whether it should respond request.&lt;/li&gt;
&lt;li&gt;The request can update the publisher directly in the &lt;code&gt;respond&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;It should be declared as nested class of publisher. If possible, also declare it as static, which will be helpful to simplify the tests.&lt;/li&gt;
&lt;li&gt;Request might has methods to help recipient to determine whether to respond the request.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt;&lt;br&gt;&lt;code&gt;Request&lt;/code&gt; can be seen as a special method that publisher exposes to a specific recipient, so the specific recipient can invoke the method to provide data. For &lt;code&gt;Request&lt;/code&gt;, you might need to aware that that sometimes request might not found proper recipient to respond. If the responder is not guaranteed to exist, then the publish to watch out no-recipent warning from EventBus.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;EventBus&lt;/code&gt; is an special &lt;a href=&quot;`Pub &amp;amp; Sub`&quot;&gt;Publish &amp;amp; Subscribe Pattern&lt;/a&gt; implementation. &lt;code&gt;EventBus&lt;/code&gt; e
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Design Patterns" scheme="http://timnew.me/categories/programming/design-patterns/"/>
    
    
      <category term="Android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="Design Pattern" scheme="http://timnew.me/tags/design-pattern/"/>
    
      <category term="EventBus" scheme="http://timnew.me/tags/eventbus/"/>
    
      <category term="Event" scheme="http://timnew.me/tags/event/"/>
    
      <category term="Command" scheme="http://timnew.me/tags/command/"/>
    
      <category term="Request" scheme="http://timnew.me/tags/request/"/>
    
      <category term="Otto" scheme="http://timnew.me/tags/otto/"/>
    
      <category term="Guava" scheme="http://timnew.me/tags/guava/"/>
    
  </entry>
  
  <entry>
    <title>Understand Styles in Android - Part 1. What it is for and how to used it</title>
    <link href="http://timnew.me/blog/2014/11/09/understand-styles-in-android-part-1-what-it-is-for-and-how-to-used-it/"/>
    <id>http://timnew.me/blog/2014/11/09/understand-styles-in-android-part-1-what-it-is-for-and-how-to-used-it/</id>
    <published>2014-11-09T05:44:29.000Z</published>
    <updated>2014-11-14T10:26:19.000Z</updated>
    
    <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2014/11/09/understand-styles-in-android-part-1-what-it-is-for-and-how-to-used-it/&quot;&gt;Part 1: What it is for and how to used it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;In android, view hierarchy usually are created via &lt;code&gt;layout&lt;/code&gt; xml file. In the file, to instantiate a &lt;code&gt;TextView&lt;/code&gt; we write:&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sample 1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Usually, we need to specify the visual of the &lt;code&gt;TextView&lt;/code&gt;, so we keep adding attributes to the &lt;code&gt;TextView&lt;/code&gt; element:&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sample 1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:background&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/category_indicator_background&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:gravity&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:maxLines&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingBottom&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingLeft&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;22dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingRight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;22dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12sp&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Usually to fully customize visual representation of a view needs a lot of attributes and resources. Such as in this example. we added &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;gravity&lt;/code&gt;, &lt;code&gt;maxLines&lt;/code&gt;, &lt;code&gt;padding&lt;/code&gt; and &lt;code&gt;textSize&lt;/code&gt;, which is a lot of code.&lt;/p&gt;
&lt;p&gt;And if we want to create another &lt;code&gt;TextView&lt;/code&gt; with exactly same visual representation, we need to copy all the values again:&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sample 1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:background&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/category_indicator_background&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:gravity&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:maxLines&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingBottom&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingLeft&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;22dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingRight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;22dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12sp&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sample 2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:background&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@drawable/category_indicator_background&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:gravity&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:maxLines&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingBottom&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingLeft&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;22dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingRight&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;22dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:paddingTop&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12dp&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:textSize&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;12sp&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Obviously, in this piece of code, there are a lot of duplications. We need to compare all the values to figure out the 2 &lt;code&gt;TextViews&lt;/code&gt; have the same visual. If we want to change the style, we need to update 2 TextViews. And the last, if we want to create the 3rd &lt;code&gt;TextView&lt;/code&gt; or even more ones, we need copy the code again and again, which makes the issue become more troublsome.&lt;/p&gt;
&lt;p&gt;In a short word, the code has bad readability, bad maintainability, bad reusability. In the book &lt;code&gt;Refactor&lt;/code&gt;, we know that code redundancy is bad smell. To mitigate the issue, we need to extract the shared code into another “unit”, and replace all the occurrences with the reference.&lt;/p&gt;
&lt;p&gt;In Android layout xml, the extract “unit”, which represents the shared attributes, are called &lt;code&gt;Style&lt;/code&gt;. After introduced &lt;code&gt;Style&lt;/code&gt;, we have:&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sample 1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@style/TextView.Customized&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;TextView&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_width&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:layout_height&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;android:text&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;Sample 2&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;@style/TextView.Customized&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;resources&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;TextView.Customized&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:gravity&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;center&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:background&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;@drawable/category_indicator_background&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:paddingLeft&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;22dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:paddingRight&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;22dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:paddingTop&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;12dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:paddingBottom&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;12dp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:textAppearance&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;@style/CategoryIndicator.Text&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:textSize&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;12sp&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android:maxLines&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;item&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;resources&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Well, this is the basics about the &lt;code&gt;Style&lt;/code&gt;: why we need it and how it is used.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2014/11/09/understand-styles-in-android-part-1-what-it-is-for-and-how-to-used-it/&quot;&gt;Part 1: What it is for and how to
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Android" scheme="http://timnew.me/categories/programming/android/"/>
    
    
      <category term="xml" scheme="http://timnew.me/tags/xml/"/>
    
      <category term="android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="style" scheme="http://timnew.me/tags/style/"/>
    
      <category term="understanding" scheme="http://timnew.me/tags/understanding/"/>
    
      <category term="view" scheme="http://timnew.me/tags/view/"/>
    
  </entry>
  
  <entry>
    <title>Walkthrough: Untrusted - the Continuing Adventures of Dr. Eval</title>
    <link href="http://timnew.me/blog/2014/11/07/walkthrough-untrusted-the-continuing-adventures-of-dr-eval/"/>
    <id>http://timnew.me/blog/2014/11/07/walkthrough-untrusted-the-continuing-adventures-of-dr-eval/</id>
    <published>2014-11-07T15:38:08.000Z</published>
    <updated>2016-03-25T13:01:53.000Z</updated>
    
    <content type="html">&lt;p&gt;This post is Walkthrough to the game &lt;a href=&quot;http://alexnisnevich.github.io/untrusted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Untrusted&lt;/a&gt;&lt;br&gt;The game introduction is available here: &lt;a href=&quot;/blog/2014/11/05/awesome-geek-game-untrusted-the-continuing-adventures-of-dr-eval/&quot;&gt;Awesome geek game Untrusted&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Level-1-cellBlockA&quot;&gt;&lt;a href=&quot;#Level-1-cellBlockA&quot; class=&quot;headerlink&quot; title=&quot;Level 1: cellBlockA&quot;&gt;&lt;/a&gt;Level 1: cellBlockA&lt;/h3&gt;&lt;p&gt;Well, you are trapped in a box. And you need to move yourself to the exit (blue squre).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Before you can do anything, you need to pick the computer first, then you will be access to the source code interface.&lt;/li&gt;
&lt;li&gt;Once you got the computer, you can figure out the code that generates the walls.&lt;/li&gt;
&lt;li&gt;Remove the code that generate the wall! And press &lt;code&gt;Ctrl+5&lt;/code&gt; to apply it.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/e2c2ea766f6163ccfcb6.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-2-theLongWayOut&quot;&gt;&lt;a href=&quot;#Level-2-theLongWayOut&quot; class=&quot;headerlink&quot; title=&quot;Level 2: theLongWayOut&quot;&gt;&lt;/a&gt;Level 2: theLongWayOut&lt;/h3&gt;&lt;p&gt;Well, you have learn the trick from Level 1, but it doesn’t work anylonger this time. You need to figure out a new apporach.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don’t try to find a path in the maze, there is no such solution.&lt;/li&gt;
&lt;li&gt;You cannot change the maze created, but you can do something to it before it is deployed.&lt;/li&gt;
&lt;li&gt;You have learn how to create it for specific size. Why not create another smaller one that doesn’t trouble you?!&lt;/li&gt;
&lt;li&gt;A maze with size (0,0) is not possible, try a more realistic one, such as (3, 3) or (4, 4).&lt;/li&gt;
&lt;li&gt;Exit is blocked completely. Do think about to break the wall, that is impossible.&lt;/li&gt;
&lt;li&gt;Who said there can be only 1 exit per level?!&lt;/li&gt;
&lt;li&gt;Create a new exit at a different location! You can learn the code form existing one.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/59ff5de31063dd27ce9d.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-3-validationEngaged&quot;&gt;&lt;a href=&quot;#Level-3-validationEngaged&quot; class=&quot;headerlink&quot; title=&quot;Level 3: validationEngaged&quot;&gt;&lt;/a&gt;Level 3: validationEngaged&lt;/h3&gt;&lt;p&gt;Well, again, &lt;code&gt;validateLevel&lt;/code&gt; is introduced, which prevents you to replay the old tricks. So you cannot create or remove objects on the fly this time.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Since you cannot create or remove objects this time, but you still can move objects.&lt;/li&gt;
&lt;li&gt;Move one of the wall away to make a gap between the wall.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/a51ca90e78c392b453ae.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-4-multiplicity&quot;&gt;&lt;a href=&quot;#Level-4-multiplicity&quot; class=&quot;headerlink&quot; title=&quot;Level 4: multiplicity&quot;&gt;&lt;/a&gt;Level 4: multiplicity&lt;/h3&gt;&lt;p&gt;You cannot move wall this time, what will you do?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Well, this is just a mindset trap. Forget about moving stuff aroud.&lt;/li&gt;
&lt;li&gt;There is no &lt;code&gt;validateLevel&lt;/code&gt; in this level.&lt;/li&gt;
&lt;li&gt;What you did in level 2.&lt;/li&gt;
&lt;li&gt;Just create a exit in the box.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/59c9d0f95aa2dabd303f.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-5-minesweeper&quot;&gt;&lt;a href=&quot;#Level-5-minesweeper&quot; class=&quot;headerlink&quot; title=&quot;Level 5: minesweeper&quot;&gt;&lt;/a&gt;Level 5: minesweeper&lt;/h3&gt;&lt;p&gt;Remember the favous game in Windows? Try it here.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The issue here is that the mine cannot be distinguished.&lt;/li&gt;
&lt;li&gt;Mark the mine with a color other than red.&lt;/li&gt;
&lt;li&gt;You can change block block color by call &lt;code&gt;setSquareColor&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/14cd0090ffe945cf7b54.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-6-drones101&quot;&gt;&lt;a href=&quot;#Level-6-drones101&quot; class=&quot;headerlink&quot; title=&quot;Level 6: drones101&quot;&gt;&lt;/a&gt;Level 6: drones101&lt;/h3&gt;&lt;p&gt;A killing drone? Keep away from it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Well, check &lt;code&gt;moveToward&lt;/code&gt;, the logic is actually very dumb.&lt;/li&gt;
&lt;li&gt;It always, move &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; if the x offset is larger than y offset.&lt;/li&gt;
&lt;li&gt;It will not move, it the intented direction is blocked.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/d3c146559b8c3d7d0f41.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;Move right first, then move down when you at the same col as the drone and block. Then move right, the drone will not follow you.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-7-colors&quot;&gt;&lt;a href=&quot;#Level-7-colors&quot; class=&quot;headerlink&quot; title=&quot;Level 7: colors&quot;&gt;&lt;/a&gt;Level 7: colors&lt;/h3&gt;&lt;p&gt;A phone to make call? Great idea!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Pick up the phone, then press &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The callback will be executed everytime you pressed &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rotate your color in the callback&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/47bd1335906094d412aa.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-8-intoTheWoods&quot;&gt;&lt;a href=&quot;#Level-8-intoTheWoods&quot; class=&quot;headerlink&quot; title=&quot;Level 8: intoTheWoods&quot;&gt;&lt;/a&gt;Level 8: intoTheWoods&lt;/h3&gt;&lt;p&gt;Go across the forest from the left to the right!&lt;br&gt;In this level, there is very little code that you can change!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Press &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The only code you can change is the callback function name&lt;/li&gt;
&lt;li&gt;All the functions that you can call are in the &lt;code&gt;functionList&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate a new forest, when you press &lt;code&gt;q&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/663f51f6cf02891a0b4a.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;Move right as far as you can; Once you are blocked, press &lt;code&gt;q&lt;/code&gt; to generate a new forest, the move.&lt;/li&gt;
&lt;li&gt;Repeat move and generate forest untill you reach the exit.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-9-fordingTheRiver&quot;&gt;&lt;a href=&quot;#Level-9-fordingTheRiver&quot; class=&quot;headerlink&quot; title=&quot;Level 9: fordingTheRiver&quot;&gt;&lt;/a&gt;Level 9: fordingTheRiver&lt;/h3&gt;&lt;p&gt;Well, a self driven raft, the raft comes to pick you up.&lt;br&gt;BTW, I really love the BG music of this level.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The raft direction is stored in variable &lt;code&gt;raftDirection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Change the &lt;code&gt;raftDirection&lt;/code&gt; to &lt;code&gt;up&lt;/code&gt;, will make the raft move up each turn.&lt;/li&gt;
&lt;li&gt;Find a chance to override the value of &lt;code&gt;raftDirection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Write a function that registerd as phone call back with API &lt;code&gt;setPhoneCallback&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/584529348a4010ef6512.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;Go to the raft, after boarding the raft press &lt;code&gt;q&lt;/code&gt; to execute callback, then move up.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-10-ambush&quot;&gt;&lt;a href=&quot;#Level-10-ambush&quot; class=&quot;headerlink&quot; title=&quot;Level 10: ambush&quot;&gt;&lt;/a&gt;Level 10: ambush&lt;/h3&gt;&lt;p&gt;Well, this time, there are a dozen of drones are on your way. You need to figure out a possible to get rid of them as fast as you can.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Don’t try to run away as what you did in Level 6. It is a different scenario.&lt;/li&gt;
&lt;li&gt;Try to change the drone behavior.&lt;/li&gt;
&lt;li&gt;To apply the same logic to 3 kinds of drones might not be a good idea.&lt;/li&gt;
&lt;li&gt;Move attak drones away from the row you’re in.&lt;/li&gt;
&lt;li&gt;Move the Defence Drones away from the row you’re in.&lt;/li&gt;
&lt;li&gt;Ask Reinforcement Drones to stay at the place.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/8f7358d7f81792eecb2d.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-11-robot&quot;&gt;&lt;a href=&quot;#Level-11-robot&quot; class=&quot;headerlink&quot; title=&quot;Level 11: robot&quot;&gt;&lt;/a&gt;Level 11: robot&lt;/h3&gt;&lt;p&gt;This time, there is very little thing about you. It is about the robot.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;“Hit and turn” should be smart enough for the puzzle.&lt;/li&gt;
&lt;li&gt;Move forward, when hit something, turn 90 deg.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;me.canMove&lt;/code&gt; to test the hit.&lt;/li&gt;
&lt;li&gt;Since there just 2 states, a boolean should be enough to represent the state.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/4820d49d07688a4d5e08.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-12-robotNav&quot;&gt;&lt;a href=&quot;#Level-12-robotNav&quot; class=&quot;headerlink&quot; title=&quot;Level 12: robotNav&quot;&gt;&lt;/a&gt;Level 12: robotNav&lt;/h3&gt;&lt;p&gt;Well this time, it goes a little complicate.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;“Hit and turn” won’t work here.&lt;/li&gt;
&lt;li&gt;Path seeking algorithm is way too complicate for this puzzle.&lt;/li&gt;
&lt;li&gt;Robot should be able to be “programmed”.&lt;/li&gt;
&lt;li&gt;An instruction system should be enough for the puzzle.&lt;/li&gt;
&lt;li&gt;Preset the instruction to the robot, and ask robot to execute it step by step.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/ed9e09f7f630b745dc02.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-13-robotMaze&quot;&gt;&lt;a href=&quot;#Level-13-robotMaze&quot; class=&quot;headerlink&quot; title=&quot;Level 13: robotMaze&quot;&gt;&lt;/a&gt;Level 13: robotMaze&lt;/h3&gt;&lt;p&gt;Well, Well, Well, it upgraded again. More intelligence is needed.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Maze is randomly generated, so fixed instruction sequence won’t work any longer.&lt;/li&gt;
&lt;li&gt;Again, Path seeking algorithm is way too complicate for this puzzle.&lt;/li&gt;
&lt;li&gt;Don’t waste your intelligence.&lt;/li&gt;
&lt;li&gt;A lot of robot can be “controlled” remotely.&lt;/li&gt;
&lt;li&gt;Try to teach the robot how to move by your character’s movement.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/76a8c8dd62310ccb1cd3.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;The robot move down when you’re in last row; the robot move up when you’re in the last 3rd row; the robot try to move to your col when you’re in the last 2nd row.&lt;/li&gt;
&lt;li&gt;Move into last 2nd row, and the move to most left. Move left and right to control robot move horizontally. Move to last 3rd row or last row when you need to tell robot move up and down.&lt;/li&gt;
&lt;li&gt;Stay in last row and last 3rd row, and press ‘r’ will move robot up and down continuously.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-14-crispsContest&quot;&gt;&lt;a href=&quot;#Level-14-crispsContest&quot; class=&quot;headerlink&quot; title=&quot;Level 14: crispsContest&quot;&gt;&lt;/a&gt;Level 14: crispsContest&lt;/h3&gt;&lt;p&gt;Again another maze!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The maze is unsolvable, don’t try to solve it.&lt;/li&gt;
&lt;li&gt;Divide the maze into 5 regions, top left 2 rooms, top right 2 rooms, left 1 room, right 1 room, and bottom 2 rooms.&lt;/li&gt;
&lt;li&gt;You can hold only one key for each color, or the key will be wasted&lt;/li&gt;
&lt;li&gt;Because of restriction(hint.3), left and right regions are meaningless.&lt;/li&gt;
&lt;li&gt;Region top left, top right, and bottom, enter and exists direction doesn’t matter.&lt;/li&gt;
&lt;li&gt;Check carefully, a string in the code isn’t locked.&lt;/li&gt;
&lt;li&gt;The item will be taken away is editable when you pass &lt;code&gt;greenLock&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Computer and phone are important items for your further plan.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt; or undeclared value causes exception.&lt;/li&gt;
&lt;li&gt;Exception will break the code execution, which blocks you from passing the door.&lt;/li&gt;
&lt;li&gt;Try to find something exists, but you don’t have yet.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;The Algorithm&lt;/code&gt; ?&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/0581159360391ecd6386.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-15-exceptionalCrossing&quot;&gt;&lt;a href=&quot;#Level-15-exceptionalCrossing&quot; class=&quot;headerlink&quot; title=&quot;Level 15: exceptionalCrossing&quot;&gt;&lt;/a&gt;Level 15: exceptionalCrossing&lt;/h3&gt;&lt;p&gt;Really a cruel design… Pick how to die? Tricky but interesting!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The only thing you can change it the value passed to &lt;code&gt;player.killBy()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Try to remember what you encounter in last level.&lt;/li&gt;
&lt;li&gt;Get some hint from the name of this level.&lt;/li&gt;
&lt;li&gt;Exception breaks code execution.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt; is a valid value.&lt;/li&gt;
&lt;li&gt;Undeclared value causes exception.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/274c06bf1ce471e98972.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-16-lasers&quot;&gt;&lt;a href=&quot;#Level-16-lasers&quot; class=&quot;headerlink&quot; title=&quot;Level 16: lasers&quot;&gt;&lt;/a&gt;Level 16: lasers&lt;/h3&gt;&lt;p&gt;Lazer kills different races.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTICE&lt;/strong&gt; You might got killed by lazer when you haven’t actually touched it. The reason is that the line isn’t 100% align with the coord is given. And I think it is a &lt;strong&gt;BUG&lt;/strong&gt; than designed by purpose.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lazer representation and collision detection are separated.&lt;/li&gt;
&lt;li&gt;Remove the drawing logic won’t solve the issue.&lt;/li&gt;
&lt;li&gt;Lazer only kills the object with different color than itself.&lt;/li&gt;
&lt;li&gt;Color the lines with the lazer color.&lt;/li&gt;
&lt;li&gt;Use the phone to update your color.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/8742a1d05da744f52fa1.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-17-pointers&quot;&gt;&lt;a href=&quot;#Level-17-pointers&quot; class=&quot;headerlink&quot; title=&quot;Level 17: pointers&quot;&gt;&lt;/a&gt;Level 17: pointers&lt;/h3&gt;&lt;p&gt;This must be the most problematic level in the game!!!!&lt;br&gt;Since fortune is more important than wisdom in this level!&lt;br&gt;If you’re lucky enough, you might able to clear the level by entering a randomly picked portal.&lt;br&gt;Actually when I play this level for 1st time, I passed without dohing any code work.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Well, you can do nothing to the layout, and teleporter links.&lt;/li&gt;
&lt;li&gt;A path seeking algorithm won’t be helpful for this puzzle.&lt;/li&gt;
&lt;li&gt;Not all the layout is solvable. That’s why you need some fortune!&lt;/li&gt;
&lt;li&gt;You’ll be killed immediately if the teleporter is linked to a trap.&lt;/li&gt;
&lt;li&gt;Try to figure out all the safe links, whose 2 end-points are teleporters.&lt;/li&gt;
&lt;li&gt;Try to visualize the the safe links.&lt;/li&gt;
&lt;li&gt;Check API document for new available APIs.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;map.getCanvasCoords&lt;/code&gt; to figure out the plot coords for teleporters.&lt;/li&gt;
&lt;li&gt;Draw lines between safe teleporters.&lt;/li&gt;
&lt;li&gt;Line drawing code can be found in previous level.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/d5a34b58f979991195c0.js&quot;&gt;&lt;/script&gt;&lt;/li&gt;
&lt;li&gt;Restart the level, if the level is obviously not solvable.&lt;/li&gt;
&lt;li&gt;The puzzle is unsolvable, if there is no link to the room where exit locates&lt;/li&gt;
&lt;li&gt;The puzzle is unsolvable, if there is no link to the room player is placed.&lt;/li&gt;
&lt;li&gt;Luck is the key!&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-18-superDrEvalBros&quot;&gt;&lt;a href=&quot;#Level-18-superDrEvalBros&quot; class=&quot;headerlink&quot; title=&quot;Level 18: superDrEvalBros&quot;&gt;&lt;/a&gt;Level 18: superDrEvalBros&lt;/h3&gt;&lt;p&gt;Great honor to &lt;code&gt;Super Bro.Mario&lt;/code&gt; 🏆&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Jump&lt;/code&gt; is kind of misleading word.&lt;/li&gt;
&lt;li&gt;“Bridge” should be a better solution.&lt;/li&gt;
&lt;li&gt;To material builds the bridge is not necessarily to be “block”.&lt;/li&gt;
&lt;li&gt;Create your material.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/510eb8288e8df8cd6d53.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;HINT&lt;/strong&gt; If you really like to jump:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Jump&lt;/code&gt; is possible, but not a really good solution, since it introduces &lt;code&gt;races&lt;/code&gt; between 2 timers.&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/c2eb267825c105774482.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-19-documentObjectMadness&quot;&gt;&lt;a href=&quot;#Level-19-documentObjectMadness&quot; class=&quot;headerlink&quot; title=&quot;Level 19: documentObjectMadness&quot;&gt;&lt;/a&gt;Level 19: documentObjectMadness&lt;/h3&gt;&lt;p&gt;jQuery!!!!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Code isn’t editable at all in this level.&lt;/li&gt;
&lt;li&gt;Use the &lt;code&gt;arrow keys&lt;/code&gt; to navigate the green block.&lt;/li&gt;
&lt;li&gt;You need to use green block to cover the red block.&lt;/li&gt;
&lt;li&gt;If you familiar with &lt;code&gt;EverNote Web Clipper&lt;/code&gt;, then it should be very easy for you.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;up&lt;/code&gt; for 4 times, then &lt;code&gt;right&lt;/code&gt; 2 times, and adjust your green block to cover &lt;code&gt;red&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-20-bossFight&quot;&gt;&lt;a href=&quot;#Level-20-bossFight&quot; class=&quot;headerlink&quot; title=&quot;Level 20: bossFight&quot;&gt;&lt;/a&gt;Level 20: bossFight&lt;/h3&gt;&lt;p&gt;Finally, fight against the BOSS!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To clear the level, you need to kill all the bosses to get the Algorithm first.&lt;/li&gt;
&lt;li&gt;Timer is not available.&lt;/li&gt;
&lt;li&gt;So before you can do anything, you need the phone to trigger something.&lt;/li&gt;
&lt;li&gt;Only 1 block is available&lt;/li&gt;
&lt;li&gt;You can place the only block in the middle of the gap to shelter the bullet for you. With its help, it isn’t that hard to get the phone without being shot.&lt;/li&gt;
&lt;li&gt;Or You might create a new tile to shelter the bullets for you, the number of new material blocks are not limited.&lt;/li&gt;
&lt;li&gt;To kill the &lt;code&gt;Boss&lt;/code&gt;, you need create your own bullet!&lt;/li&gt;
&lt;li&gt;If you create your own shelter material, you can make it &lt;code&gt;passable for&lt;/code&gt; your bullet.&lt;/li&gt;
&lt;li&gt;Who said the bullet must be shot from your position?&lt;/li&gt;
&lt;li&gt;Who said the bullet must fly from bottom to top?&lt;/li&gt;
&lt;li&gt;Who said you can only shot one bullet per key press?&lt;/li&gt;
&lt;li&gt;&lt;script src=&quot;//gist.github.com/32f51daac7d17b9e233f.js&quot;&gt;&lt;/script&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Level-21-endOfTheLine&quot;&gt;&lt;a href=&quot;#Level-21-endOfTheLine&quot; class=&quot;headerlink&quot; title=&quot;Level 21: endOfTheLine&quot;&gt;&lt;/a&gt;Level 21: endOfTheLine&lt;/h3&gt;&lt;p&gt;It is &lt;code&gt;the End&lt;/code&gt;?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;This isn’t really the last level!&lt;/li&gt;
&lt;li&gt;The key is &lt;code&gt;map.finalLevel = true;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Ctrl+0&lt;/code&gt; to check what is inside.&lt;/li&gt;
&lt;li&gt;What is in &lt;code&gt;scripts/&lt;/code&gt; folder?&lt;/li&gt;
&lt;li&gt;Why some blocks are purple, some others are black?&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;objects.js&lt;/code&gt;, find &lt;code&gt;exit&lt;/code&gt; object definition.&lt;/li&gt;
&lt;li&gt;Comment out &lt;code&gt;if (!game.map.finalLevel) {&lt;/code&gt; and &lt;code&gt;}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Go to next level!&lt;/li&gt;
&lt;/ol&gt;
&lt;script src=&quot;//code.jquery.com/jquery-2.1.1.min.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
$(function(){var $root = $(&#39;.article-entry&#39;);
  $root.find(&#39;ol li&#39;).css(&#39;display&#39;, &#39;none&#39;);
  $root.find(&#39;ol&#39;).each(function(){var $ol = $(this);
    $(&#39;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;Hint me&lt;/a&gt;&lt;/li&gt;&#39;).click(function(e){e.preventDefault();
      $ol.find(&#39;li:hidden:first&#39;).css(&#39;display&#39;, &#39;list-item&#39;)
      if($ol.find(&#39;li:hidden&#39;).length === 0) {$(this).remove();}
    }).appendTo($ol);
  });
});
&lt;/script&gt;


</content>
    
    <summary type="html">
    
      &lt;p&gt;This post is Walkthrough to the game &lt;a href=&quot;http://alexnisnevich.github.io/untrusted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Untrusted&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Game" scheme="http://timnew.me/categories/game/"/>
    
      <category term="Programming Game" scheme="http://timnew.me/categories/game/programming-game/"/>
    
    
      <category term="Programming Game" scheme="http://timnew.me/tags/programming-game/"/>
    
      <category term="Untrusted" scheme="http://timnew.me/tags/untrusted/"/>
    
      <category term="Javascript" scheme="http://timnew.me/tags/javascript/"/>
    
      <category term="Walkthrough" scheme="http://timnew.me/tags/walkthrough/"/>
    
  </entry>
  
  <entry>
    <title>Awesome geek game Untrusted - the Continuing Adventures of Dr. Eval</title>
    <link href="http://timnew.me/blog/2014/11/05/awesome-geek-game-untrusted-the-continuing-adventures-of-dr-eval/"/>
    <id>http://timnew.me/blog/2014/11/05/awesome-geek-game-untrusted-the-continuing-adventures-of-dr-eval/</id>
    <published>2014-11-05T14:21:40.000Z</published>
    <updated>2014-11-07T15:41:00.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://alexnisnevich.github.io/untrusted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Untrusted&lt;/a&gt; is an awesome game brought to us by &lt;a href=&quot;http://alex.nisnevich.com/portfolio/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Alex Nisnevich&lt;/a&gt; and &lt;a href=&quot;http://github.everydayimshuflin.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Greg Shuflin&lt;/a&gt;. &lt;code&gt;Untrusted&lt;/code&gt; is an unique puzzle game designed for geeks and developers. The reason I said it is designed for geeks and developer is because to solve the puzzles in the game, you need to know or even to write some &lt;code&gt;javascript&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is how the creators describe their baby:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Untrusted —or— the Continuing Adventures of Dr. Eval is an exciting Meta-Javascript Adventure Game wherein you guide the dashing, steadfast Dr. Eval through a mysterious MACHINE CONTINUUM, wherein, using only his trusty computer and the TURING-COMPLETE power of Javascript, he must literally ALTER HIS REALITY in order to find his freedom! You must literally edit and re-execute the very Javascript running the game in your browser to save Dr. Eval from this dark and confusing reality!&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;Untrusted Repo&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://github.com/AlexNisnevich/untrusted&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github.com/AlexNisnevich/untrusted&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;The description is a little bit hard to understand if you don’t touch the game. I’ll try to translate it a little bit:&lt;/p&gt;
&lt;p&gt;In the game, to clear a level, you need to move your &lt;code&gt;avatar&lt;/code&gt; to the exit. And just like other normal acarde game, you can control the your &lt;code&gt;avatar&lt;/code&gt;, Dr. Eval using &lt;code&gt;arrow keys&lt;/code&gt;. The intresting part of this game is that basically, you will always run into the a dead end if you just move Dr.Eval around without doing anything else. Luckily, you will be able to access the source code that creates the world and the rule in the world. To save yourself from the dead end, you need to change part the world/rule by hacking the source code.&lt;/p&gt;
&lt;p&gt;The game isn’t that hard if you have some coding experience and is familiar with javascript concepts. And learn from the passed level is very important, since you might find either useful hints or even code to solve your current problem.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Besides the puzzle and the code, the music of each level is also great! 8Bit music in different style! Really awesome!&lt;/p&gt;
&lt;p&gt;Insterested? Here is the port lead to the game: &lt;a href=&quot;http://alexnisnevich.github.io/untrusted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Untrusted&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hints-and-Walkthrough&quot;&gt;&lt;a href=&quot;#Hints-and-Walkthrough&quot; class=&quot;headerlink&quot; title=&quot;Hints and Walkthrough&quot;&gt;&lt;/a&gt;Hints and Walkthrough&lt;/h2&gt;&lt;p&gt;&lt;del&gt;I attached my hints and solutions below, is case if you run into trouble.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;I have extract the walkthrough into another post.&lt;/p&gt;
&lt;p&gt;Here is the link to the walkthrough: &lt;a href=&quot;/blog/2014/11/07/walkthrough-untrusted-the-continuing-adventures-of-dr-eval/&quot;&gt;Walkthrough&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://alexnisnevich.github.io/untrusted/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Untrusted&lt;/a&gt; is an awesome game brought to us by &lt;a h
    
    </summary>
    
      <category term="Game" scheme="http://timnew.me/categories/game/"/>
    
      <category term="Programming Game" scheme="http://timnew.me/categories/game/programming-game/"/>
    
    
      <category term="Programming Game" scheme="http://timnew.me/tags/programming-game/"/>
    
      <category term="Untrusted" scheme="http://timnew.me/tags/untrusted/"/>
    
      <category term="Javascript" scheme="http://timnew.me/tags/javascript/"/>
    
      <category term="Introduction" scheme="http://timnew.me/tags/introduction/"/>
    
  </entry>
  
  <entry>
    <title>Perform Clicks in Android Robolectric Unit Test</title>
    <link href="http://timnew.me/blog/2014/10/27/perform-clicks-in-android-robolectric-unit-test/"/>
    <id>http://timnew.me/blog/2014/10/27/perform-clicks-in-android-robolectric-unit-test/</id>
    <published>2014-10-27T08:17:13.000Z</published>
    <updated>2014-10-27T09:47:34.000Z</updated>
    
    <content type="html">&lt;p&gt;Robolectric is an awesome library that makes UI unit test on Android a lot easier and faster. In UI test, one of the most basic thing is to simulate user interaction, such as clicking a button.&lt;/p&gt;
&lt;h2 id=&quot;Click-on-individual-View&quot;&gt;&lt;a href=&quot;#Click-on-individual-View&quot; class=&quot;headerlink&quot; title=&quot;Click on individual View&quot;&gt;&lt;/a&gt;Click on individual View&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Click&lt;/code&gt; should be the most basic user interaction, besides invokeing the &lt;code&gt;View.performClick()&lt;/code&gt; method, Robolectric provides a more smarter version &lt;code&gt;Robolectric.clickOn(View)&lt;/code&gt;, which checks the view visibility and &lt;code&gt;enabled&lt;/code&gt; status before actually “click” the view. If a view is either not visible or disabled, the click action will not be performed. This mechanism is useful to avoid some silly cases in automated tests.&lt;/p&gt;
&lt;h2 id=&quot;Long-Click-on-individual-View&quot;&gt;&lt;a href=&quot;#Long-Click-on-individual-View&quot; class=&quot;headerlink&quot; title=&quot;Long Click on individual View&quot;&gt;&lt;/a&gt;Long Click on individual View&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Long click&lt;/code&gt; is a more advanced &lt;code&gt;click&lt;/code&gt; action. To simulate a long click action, &lt;code&gt;View.performLongClick()&lt;/code&gt; can be invoked. But since Robolectric doesn’t provide any long click helper, make sure you do it by yourself, including checking whether view is &lt;code&gt;long-clickable&lt;/code&gt;, which usually will be set manually or more often, when &lt;code&gt;View.setOnLongClickListener&lt;/code&gt; is invoked; view is visible and enabled as what &lt;code&gt;click&lt;/code&gt; does. Although &lt;code&gt;Long click&lt;/code&gt; is avaible to use, but from my experience, long click on a individual view is rarely used in real UI design, instead &lt;code&gt;long click&lt;/code&gt; is usually performed on an item of list view or grid view. This is the trickest case that I’ll leave it to the last.&lt;/p&gt;
&lt;h2 id=&quot;Click-on-item-of-List-Grid&quot;&gt;&lt;a href=&quot;#Click-on-item-of-List-Grid&quot; class=&quot;headerlink&quot; title=&quot;Click on item of List/Grid&quot;&gt;&lt;/a&gt;Click on item of List/Grid&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Click&lt;/code&gt; on List View or Grid View item. Well, idally, this shouldn’t be so much different than click on a indiviual view. But in Android implementation, item click is handled by the list view with a much more complicated API. To perform an &lt;code&gt;item click&lt;/code&gt;, &lt;code&gt;boolean performItemClick(View v, int position, long id)&lt;/code&gt; can be invoked. &lt;code&gt;performItemClick&lt;/code&gt; requires 3 parameters, the first one is the view being clicked, the second one is the position of clicked view’s corresponding data item in adapter and the last is the if of clicked view’s corresponding data item. Complicated, isn’t it?&lt;/p&gt;
&lt;p&gt;In Android implementation, item view displayed in ListView/GridView is actually provided by its adapter. Adapter works like a presenter in MVP pattern that creates/update item view based on the item data it holds. It also provides the id for the item. So to perform a item click, besides the ListView/GridView, you also need its adapter.&lt;/p&gt;
&lt;p&gt;Following implementation explains how it works:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clickItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AbsListView listView, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ListAdapter adapter = listView.getAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View itemView = adapter.getView(position, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, listView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listView.performItemClick(itemView, position, adapter.getItemId(position));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;In the code, &lt;code&gt;AbsListView&lt;/code&gt; is the base class of &lt;code&gt;ListView&lt;/code&gt; and &lt;code&gt;GridView&lt;/code&gt;. To click the item, you need&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get the adapter of the &lt;code&gt;AbsListView&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create an &lt;code&gt;item view&lt;/code&gt; for specific &lt;code&gt;position&lt;/code&gt; with adapter&lt;/li&gt;
&lt;li&gt;Calculate the &lt;code&gt;item id&lt;/code&gt; of corresponding &lt;code&gt;position&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Invoke &lt;code&gt;performItemClick&lt;/code&gt; method with data we got before.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the implementation, for simplicity reason, we ignored some cases, such as convertView reusing. From my experience, in most cases, it won’t impact the functionality, so we don’t need to worry about it, unless you clearly know that matters, then you need to cover them in your tests.&lt;/p&gt;
&lt;h2 id=&quot;Long-click-and-item-of-List-Grid&quot;&gt;&lt;a href=&quot;#Long-click-and-item-of-List-Grid&quot; class=&quot;headerlink&quot; title=&quot;Long click and item of List/Grid&quot;&gt;&lt;/a&gt;Long click and item of List/Grid&lt;/h2&gt;&lt;p&gt;Well, this action is also not a commonly used. It is only used in limited cases, such as selecting multiple item or displaying context menu for specific item.&lt;br&gt;To perform a long click on the item is the most trickest case. In previous 3 cases, we either directly or indrectly depends on &lt;code&gt;View.perform***Click&lt;/code&gt; method. But not sure why, android doesn’t provide similar public API method of &lt;code&gt;item long click&lt;/code&gt;. By diving into Anrdoid source code, we can figure out that Item Long Click isn’t really handled by ListView itself, instead it is handled by a &lt;code&gt;Runnable&lt;/code&gt; named &lt;code&gt;CheckForKeyLongPress&lt;/code&gt;. To invoke method on this object isn’t that streight forward, and might involes unnecessary multithread issue.&lt;/p&gt;
&lt;p&gt;I just want to click a item, why I have to deal with these unnecessary complicates? So I learnt from the &lt;code&gt;CheckForKeyLongPress&lt;/code&gt; implementation, and implmented my own “API”:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;longClickItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AbsListView listView, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!listView.isLongClickable())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    OnItemLongClickListener listener = listView.getOnItemLongClickListener();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ListAdapter adapter = listView.getAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View itemView = adapter.getView(position, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, listView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listener.onItemLongClick(listView, itemView, position, adapter.getItemId(position));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    listView.performHapticFeedback(LONG_PRESS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;My main purpose of perform a click is to trigger the corresponding listener, so I tried to invoke the listener directly with some necessary pre-checks. This aporach will not triggers these UI effects, but I assume it can meet most test cases.&lt;/p&gt;
&lt;h2 id=&quot;APPENDIX-UIActions-helper-class&quot;&gt;&lt;a href=&quot;#APPENDIX-UIActions-helper-class&quot; class=&quot;headerlink&quot; title=&quot;APPENDIX UIActions helper class&quot;&gt;&lt;/a&gt;APPENDIX UIActions helper class&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; me.timnew.robolectric.utils;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Activity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.app.Fragment;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.view.View;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.AbsListView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.ListAdapter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.robolectric.Robolectric;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; android.view.HapticFeedbackConstants.LONG_PRESS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; android.widget.AdapterView.OnItemLongClickListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UiActions&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clickOn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View view)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Robolectric.clickOn(view);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clickOn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Activity activity, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; targetViewId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Robolectric.clickOn(activity.findViewById(targetViewId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clickOn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(View parentView, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; targetViewId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Robolectric.clickOn(parentView.findViewById(targetViewId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clickOn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Fragment fragment, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; targetViewId)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//noinspection ConstantConditions&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Robolectric.clickOn(fragment.getView().findViewById(targetViewId));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;pressBackButton&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Activity currentActivity)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentActivity.getFragmentManager().getBackStackEntryCount() &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            currentActivity.getFragmentManager().popBackStackImmediate();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            currentActivity.onBackPressed();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;clickItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AbsListView listView, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListAdapter adapter = listView.getAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View itemView = adapter.getView(position, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, listView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listView.performItemClick(itemView, position, adapter.getItemId(position));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;longClickItem&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(AbsListView listView, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!listView.isLongClickable())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        OnItemLongClickListener listener = listView.getOnItemLongClickListener();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (listener == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ListAdapter adapter = listView.getAdapter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        View itemView = adapter.getView(position, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;, listView);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listener.onItemLongClick(listView, itemView, position, adapter.getItemId(position));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        listView.performHapticFeedback(LONG_PRESS);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Robolectric is an awesome library that makes UI unit test on Android a lot easier and faster. In UI test, one of the most basic thing is 
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Android" scheme="http://timnew.me/categories/programming/android/"/>
    
    
      <category term="unit test" scheme="http://timnew.me/tags/unit-test/"/>
    
      <category term="android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="robolectric" scheme="http://timnew.me/tags/robolectric/"/>
    
      <category term="list view" scheme="http://timnew.me/tags/list-view/"/>
    
      <category term="long click" scheme="http://timnew.me/tags/long-click/"/>
    
      <category term="item" scheme="http://timnew.me/tags/item/"/>
    
      <category term="click" scheme="http://timnew.me/tags/click/"/>
    
      <category term="ui action" scheme="http://timnew.me/tags/ui-action/"/>
    
  </entry>
  
  <entry>
    <title>2 Modules Android project with Robolectric, Gradle, Android Studio</title>
    <link href="http://timnew.me/blog/2014/09/30/2-modules-android-project-with-robolectric-gradle-android-studio/"/>
    <id>http://timnew.me/blog/2014/09/30/2-modules-android-project-with-robolectric-gradle-android-studio/</id>
    <published>2014-09-30T05:00:58.000Z</published>
    <updated>2014-09-30T06:50:11.000Z</updated>
    
    <content type="html">&lt;p&gt;Start a new Android project this week, so I started to setup the development environment. To be honest, it is not an easy experience to me.&lt;/p&gt;
&lt;h2 id=&quot;Features&quot;&gt;&lt;a href=&quot;#Features&quot; class=&quot;headerlink&quot; title=&quot;Features&quot;&gt;&lt;/a&gt;Features&lt;/h2&gt;&lt;p&gt;Here are the features I got now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unit test with Robolectric. (Very fundamental requirement)&lt;/li&gt;
&lt;li&gt;Unit tests are separated into an independent module. (Provide flexibility when project growing larger. And provide a more clear view of code organization)&lt;/li&gt;
&lt;li&gt;Running unit tests recognized by Android Studio/IntelliJ unit test plugin and debug UTs in IDE. (This is very important when diagnose failure UT)&lt;/li&gt;
&lt;li&gt;Running unit tests via CLI with &lt;code&gt;gradle wrapper&lt;/code&gt;. (This is necessary requirement for CI servers)&lt;/li&gt;
&lt;li&gt;Using resources in Robolectric test. (Avoid &lt;code&gt;Resource Not Found&lt;/code&gt; exception in unit tests)&lt;/li&gt;
&lt;li&gt;Test Android Annotation powered async implementation. (AA introduces new Async implementation, which is not supported by Robolectric by default)&lt;/li&gt;
&lt;li&gt;AssertJ core support. (Fest has been deprecated since no one is maintain it now.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Versions&quot;&gt;&lt;a href=&quot;#Versions&quot; class=&quot;headerlink&quot; title=&quot;Versions&quot;&gt;&lt;/a&gt;Versions&lt;/h2&gt;&lt;p&gt;The major difficulties that I met are version compatibility, I almost tried all available version combinations to make them all works. Here are the versions that I uses&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gradle: 2.1&lt;/li&gt;
&lt;li&gt;Groovy: 2.3.6&lt;/li&gt;
&lt;li&gt;Ant: 1.9.3&lt;/li&gt;
&lt;li&gt;JVM: 1.6.0_65 (Apple Inc. 20.65-b04-462)&lt;/li&gt;
&lt;li&gt;OS: Mac OS X 10.9.5 x86_64&lt;/li&gt;
&lt;li&gt;Android Studio: 0.8.11 (build AI-135.1446794)&lt;/li&gt;
&lt;li&gt;IntelliJ: IDEA 14 CE EAP, build IC-138.2458.8&lt;/li&gt;
&lt;li&gt;Android gradle plugin: com.android.tools.build:gradle:0.13.0&lt;/li&gt;
&lt;li&gt;Android ADT gradle plugin: com.neenbedankt.gradle.plugins:android-apt:1.4+&lt;/li&gt;
&lt;li&gt;Compile SDK version: 20&lt;/li&gt;
&lt;li&gt;Build tool version: 20.0.0&lt;/li&gt;
&lt;li&gt;Robolectric: 2.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Known-Issues&quot;&gt;&lt;a href=&quot;#Known-Issues&quot; class=&quot;headerlink&quot; title=&quot;Known Issues&quot;&gt;&lt;/a&gt;Known Issues&lt;/h1&gt;&lt;p&gt;My current solution isn’t perfect. But for now, I haven’t working solution for them. Hope it could be fixed in the future&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AAR&lt;/code&gt; is not supported in Unit Test. (A tricky issue, I’ll explain more in detail later)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/square/assertj-android&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AssertJ-Android&lt;/a&gt; is not supported. (Cause by AAR support issue, alternative available.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Project-Structure-and-configurations&quot;&gt;&lt;a href=&quot;#Project-Structure-and-configurations&quot; class=&quot;headerlink&quot; title=&quot;Project Structure and configurations&quot;&gt;&lt;/a&gt;Project Structure and configurations&lt;/h2&gt;&lt;p&gt;Here are the project structure:&lt;br&gt;&lt;figure class=&quot;highlight 1c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RootProject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;|- settings.gradle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;|- build.gradle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;|- Launcher&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   \- builde.gradle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;\- UnitTest&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;string&quot;&gt;|- build.gradle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   \- UnitTest.iml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here are the contents&lt;/p&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;figcaption&gt;&lt;span&gt;\Settings.gradle&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;:Launcher&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;:UnitTest&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;figcaption&gt;&lt;span&gt;\build.gradle&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.tools.build:gradle:0.13.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;allprojects&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenLocal()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;figcaption&gt;&lt;span&gt;\Launcher\build.gradle&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.tools.build:gradle:0.13.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.neenbedankt.gradle.plugins:android-apt:1.4+&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenLocal()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;com.android.application&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;android-apt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;android &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compileSdkVersion &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buildToolsVersion &lt;span class=&quot;string&quot;&gt;&#39;20.0.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    defaultConfig &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minSdkVersion &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        targetSdkVersion &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        versionCode &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        versionName &lt;span class=&quot;string&quot;&gt;&quot;1.0&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    buildTypes &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        debug &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            runProguard &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proguardFiles getDefaultProguardFile(&lt;span class=&quot;string&quot;&gt;&#39;proguard-android.txt&#39;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39;proguard-rules.txt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        release &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            runProguard &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            proguardFiles getDefaultProguardFile(&lt;span class=&quot;string&quot;&gt;&#39;proguard-android.txt&#39;&lt;/span&gt;), &lt;span class=&quot;string&quot;&gt;&#39;proguard-rules.txt&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    arguments &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        androidManifestFile variant.processResources.manifestFile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        resourcePackageName &lt;span class=&quot;string&quot;&gt;&#39;me.timnew.game.launcher&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; AAVersion = &lt;span class=&quot;string&quot;&gt;&#39;3.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    apt &lt;span class=&quot;string&quot;&gt;&quot;org.androidannotations:androidannotations:$AAVersion&quot;&lt;/span&gt;         &lt;span class=&quot;comment&quot;&gt;// Process AA annotations&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * Android Studio will remove this line if you try to edit project configuration with GUI.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    * It seems it is a bug of Android Studio since it does not understand DSL `apt`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;org.androidannotations:androidannotations-api:$AAVersion&quot;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// AA Runtime API. Becareful&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;de.greenrobot:eventbus:2.2.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;org.easytesting:fest-reflect:1.4.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.google.guava:guava:18.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.koushikdutta.ion:ion:1.3.8&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;fileTree&lt;/span&gt;(dir: &lt;span class=&quot;string&quot;&gt;&#39;libs&#39;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt;: [&lt;span class=&quot;string&quot;&gt;&#39;*.jar&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;*.aar&#39;&lt;/span&gt;]) &lt;span class=&quot;comment&quot;&gt;// Well although I mentioned aar here, but it doesn&#39;t load correctly.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:support-v4:20.0.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:support-annotations:20.0.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.support:appcompat-v7:20.0.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;figcaption&gt;&lt;span&gt;\UnitTest\build.gradle&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;buildscript&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;com.android.tools.build:gradle:0.13.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apply plugin: &lt;span class=&quot;string&quot;&gt;&#39;java&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;repositories&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenLocal()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maven &amp;#123; url &lt;span class=&quot;string&quot;&gt;&quot;$System.env.ANDROID_HOME/extras/android/m2repository&quot;&lt;/span&gt; &amp;#125; &lt;span class=&quot;comment&quot;&gt;// Fix &#39;com.android.support:*&#39; package not found issue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mavenCentral()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;dependencies&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; appModule = &lt;span class=&quot;keyword&quot;&gt;project&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;:Launcher&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;compile&lt;/span&gt; appModule&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile appModule.android.applicationVariants.&lt;span class=&quot;keyword&quot;&gt;toList&lt;/span&gt;().first().javaCompile.&lt;span class=&quot;keyword&quot;&gt;classpath&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;// Include classes from main project&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile appModule.android.applicationVariants.&lt;span class=&quot;keyword&quot;&gt;toList&lt;/span&gt;().first().javaCompile.outputs.files&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile files(appModule.plugins.findPlugin(&lt;span class=&quot;string&quot;&gt;&quot;com.android.application&quot;&lt;/span&gt;).getBootClasspath())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile(&lt;span class=&quot;string&quot;&gt;&#39;junit:junit:4.+&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;exclude&lt;/span&gt; module: &lt;span class=&quot;string&quot;&gt;&#39;hamcrest-core&#39;&lt;/span&gt;                                                            &lt;span class=&quot;comment&quot;&gt;// Exclude problematic &#39;hamcrest&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;string&quot;&gt;&#39;org.robolectric:robolectric:2.3&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;string&quot;&gt;&#39;org.mockito:mockito-core:1.9.5&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    testCompile &lt;span class=&quot;string&quot;&gt;&#39;org.assertj:assertj-core:1.6.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tasks.withType(Test) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scanForTestClasses = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;**/*Should.class&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;**/*Test.class&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;**/*Tests.class&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Why-uses-java-plug-in-instead-of-android-unit-test-plug-ins&quot;&gt;&lt;a href=&quot;#Why-uses-java-plug-in-instead-of-android-unit-test-plug-ins&quot; class=&quot;headerlink&quot; title=&quot;Why uses java plug-in instead of android unit test plug-ins&quot;&gt;&lt;/a&gt;Why uses &lt;code&gt;java&lt;/code&gt; plug-in instead of &lt;code&gt;android unit test&lt;/code&gt; plug-ins&lt;/h2&gt;&lt;p&gt;Well, Gradle DSL provides a lot of flexibility to developer. But it also brought a lot complexity to IDE implementation. To figure out project configuration, IDE need to parse and understand the gradle scripts. Not only DSLs provided by gradle but all stuff come with plug-ins. From IDE, this is almost an impossible mission. So IDE need to figure out a way to simplify the process, such as support a subset of DSL.&lt;/p&gt;
&lt;p&gt;For Android project, IntelliJ has difficulties to understand the all variations of &lt;code&gt;android unit test&lt;/code&gt; plug-ins. So it is not easy to make unit test runnable from IDE. To solve the issue, you either try to teach IDE about the DSL by providing plug-in to IDE, or uses some languages that IDE understood.&lt;/p&gt;
&lt;p&gt;I tried some plug-in available today, but none of them works for me. So I decide to use &lt;code&gt;java&lt;/code&gt; DSL, which IntelliJ understood natively. As a trade off, since &lt;code&gt;java&lt;/code&gt; gradle plugin doesn’t understand &lt;code&gt;Android Library&lt;/code&gt;, so it cannot import &lt;code&gt;.aar&lt;/code&gt; libries.&lt;/p&gt;
&lt;p&gt;Besides I tried all &lt;code&gt;android unit test&lt;/code&gt; gradle plugins, I found all of them depends on &lt;code&gt;android&lt;/code&gt; gradle plugin. And &lt;code&gt;android&lt;/code&gt; plugin depends on &lt;code&gt;AndroidManifest.xml&lt;/code&gt; and some other stuff. It is wield to provide an manifest for your unit test.&lt;/p&gt;
&lt;p&gt;So as the final solution, I uses &lt;code&gt;java&lt;/code&gt; plug-in, avoid using &lt;code&gt;aar&lt;/code&gt; in the test.&lt;/p&gt;
&lt;h2 id=&quot;Why-so-complicate&quot;&gt;&lt;a href=&quot;#Why-so-complicate&quot; class=&quot;headerlink&quot; title=&quot;Why so complicate&quot;&gt;&lt;/a&gt;Why so complicate&lt;/h2&gt;&lt;p&gt;Configurate an working Android project isn’t as easy as it sounds. Differ from iOS community, Google isn’t strong-minded as Apple. As a consequence that Android community is fragmented and lack of unified solution. There are tons of solutions available, but you might need to try them one by one to figure out which fits your requirement.&lt;/p&gt;
&lt;p&gt;To make your tool chain, dependencies, IDE work together, compatibility is always your enemy. Even Google has to publish &lt;a href=&quot;http://tools.android.com/tech-docs/new-build-system/version-compatibility&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Version Compatibility Table&lt;/a&gt; to mitigate the pain.&lt;/p&gt;
&lt;p&gt;What a mess!!!!!&lt;/p&gt;
&lt;h2 id=&quot;References-posts-plugins-or-template-projects&quot;&gt;&lt;a href=&quot;#References-posts-plugins-or-template-projects&quot; class=&quot;headerlink&quot; title=&quot;References posts, plugins or template projects&quot;&gt;&lt;/a&gt;References posts, plugins or template projects&lt;/h2&gt;&lt;p&gt;Here is a list of things that I tried but failed to fit my requirement. List here since it might be helpful to other people.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.blundell-apps.com/android-gradle-app-with-robolectric-junit-tests/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Gradle App with Robolectric JUnit tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/blundell/tests-app-robolectric-junit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tests-app-robolectric-junit&lt;/a&gt; template project&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/robolectric/deckard-gradle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;deckard-gradle&lt;/a&gt; template project&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/JCAndKSolutions/android-unit-test&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-unit-test&lt;/a&gt; gradle plug in&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/evant/android-studio-unit-test-plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;android-studio-unit-test-plugin&lt;/a&gt; android studio/intellij plugin&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/robolectric/robolectric-gradle-plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;robolectric-gradle-plugin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/novoda/robolectric-plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;robolectric-plugin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Start a new Android project this week, so I started to setup the development environment. To be honest, it is not an easy experience to m
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Android" scheme="http://timnew.me/categories/programming/android/"/>
    
    
      <category term="Android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="Project" scheme="http://timnew.me/tags/project/"/>
    
      <category term="Boilerplate" scheme="http://timnew.me/tags/boilerplate/"/>
    
      <category term="Robolectric" scheme="http://timnew.me/tags/robolectric/"/>
    
      <category term="Gradle" scheme="http://timnew.me/tags/gradle/"/>
    
      <category term="Android Studio" scheme="http://timnew.me/tags/android-studio/"/>
    
      <category term="Unit Test" scheme="http://timnew.me/tags/unit-test/"/>
    
      <category term="Structure" scheme="http://timnew.me/tags/structure/"/>
    
  </entry>
  
  <entry>
    <title>Trello Confetti Effect</title>
    <link href="http://timnew.me/blog/2014/09/24/trello-confetti-effect/"/>
    <id>http://timnew.me/blog/2014/09/24/trello-confetti-effect/</id>
    <published>2014-09-24T05:13:33.000Z</published>
    <updated>2016-03-25T13:11:03.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://trello.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trello&lt;/a&gt; just created a &lt;a href=&quot;https://trello.com/5m&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;page&lt;/a&gt; to celebrate their user number reaches 5 million. In their celebration page, they introduce an interesting effect, a number of blue squares rotating and falling from the sky.&lt;/p&gt;
&lt;p&gt;By inspecting their source code, I extracted the effect implementation from the page.&lt;/p&gt;
{% codepen timnew tlEBe 7928 result 500 %}
&lt;p&gt;As you can see, the effect is implemented with Canvas animation. Trello guys created a light weight particle system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ConfettiMachine&lt;/code&gt; is the particle system controller, which takes the responsibility to create new particles and call &lt;code&gt;draw&lt;/code&gt; method on them one by one.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Particle&lt;/code&gt; is the representation of the blue square, it takes the rotation, fading out and rendering.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The source code is extracted for study purpose, all code and credits belongs to Trello guys.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://trello.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trello&lt;/a&gt; just created a &lt;a href=&quot;https://trello.com/5m&quot; target=&quot;_blank&quot; rel
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/programming/web/"/>
    
    
      <category term="effect" scheme="http://timnew.me/tags/effect/"/>
    
      <category term="animation" scheme="http://timnew.me/tags/animation/"/>
    
      <category term="trello" scheme="http://timnew.me/tags/trello/"/>
    
      <category term="confetti" scheme="http://timnew.me/tags/confetti/"/>
    
      <category term="canvas" scheme="http://timnew.me/tags/canvas/"/>
    
      <category term="draw" scheme="http://timnew.me/tags/draw/"/>
    
      <category term="particle" scheme="http://timnew.me/tags/particle/"/>
    
  </entry>
  
  <entry>
    <title>Otto and Android Annotations Compatibility Issue Analysis</title>
    <link href="http://timnew.me/blog/2014/09/14/otto-and-android-annotations-compatibility-issue-analysis/"/>
    <id>http://timnew.me/blog/2014/09/14/otto-and-android-annotations-compatibility-issue-analysis/</id>
    <published>2014-09-14T08:14:22.000Z</published>
    <updated>2014-09-14T08:14:22.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/square/otto&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Otto&lt;/a&gt; is a great Android event bus solution developed by &lt;a href=&quot;http://square.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SquareUp&lt;/a&gt; guys. These guys extract the event bus related classes from &lt;a href=&quot;https://code.google.com/p/guava-libraries/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google’s Guava&lt;/a&gt;, and optimized it for Android. Event Bus is a great solution to keep your code away from messy anonymous or internal classes only used for event handling! And Otto’s simplicity and performance makes it used to be the most popular event bus solution in Android development.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://androidannotations.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Annotations&lt;/a&gt;, as known as &lt;code&gt;AA&lt;/code&gt;, is another great library that makes Android developers’ lives a lot easier. Just annotating the code, AA helps developer handles the most boring or error-proning tasks for you, including binding widgets binding, asynchronous tasks, life time management, etc…&lt;/p&gt;
&lt;h2 id=&quot;Issue&quot;&gt;&lt;a href=&quot;#Issue&quot; class=&quot;headerlink&quot; title=&quot;Issue&quot;&gt;&lt;/a&gt;Issue&lt;/h2&gt;&lt;p&gt;Otto and AA are the libraries focusing on different aspects. Theoretically speaking, there shouldn’t be any compatibility issue between them. But the reality Otto event is never delivered to AA annotated classes. By inspecting the code with step by step debugging, I found the root cause of the issue is Otto failed to located &lt;code&gt;@Produce&lt;/code&gt; and &lt;code&gt;@Subscribe&lt;/code&gt; annotated methods in AA generated code.&lt;/p&gt;
&lt;h2 id=&quot;Analysis&quot;&gt;&lt;a href=&quot;#Analysis&quot; class=&quot;headerlink&quot; title=&quot;Analysis&quot;&gt;&lt;/a&gt;Analysis&lt;/h2&gt;&lt;p&gt;After a few study work, I finally understood what is the reason behind:&lt;/p&gt;
&lt;p&gt;For performance consideration, Android Annotations actually does it work during the compilation time instead of Runtime. AA will derive the annotated classes, and generate some code according to the annotations applied. During the runtime, the classes got instantiated is actually the derived classes instead of the original one, although in the code is accessed via the original class as interface.&lt;/p&gt;
&lt;p&gt;Here is a simple example:&lt;/p&gt;
&lt;p&gt;I have the class &lt;code&gt;ServerListAdapter&lt;/code&gt;, which is used to provide data for a grid view.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@EBean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerListAdapter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;AdvBaseAdapter&lt;/span&gt;&amp;lt;&lt;span class=&quot;title&quot;&gt;InetAddress&lt;/span&gt;, &lt;span class=&quot;title&quot;&gt;ServerView&lt;/span&gt;&amp;gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@RootContext&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Context context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@SystemService&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; LayoutInflater inflater;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; Bus bus;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerListAdapter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;InetAddress&amp;gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@AfterInject&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;afterInject&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bus.register(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; ServerView &lt;span class=&quot;title&quot;&gt;createView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ViewGroup parent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ServerView_.build(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; ServerView &lt;span class=&quot;title&quot;&gt;updateView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ServerView itemView, InetAddress item)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itemView.update(item);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; itemView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Subscribe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;fetchServerStatus&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DiscoveryStatusEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setItems(event.addresses);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Subscribe&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onServerStatusUpdated&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(DiscoveryStatusChangedEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (event.type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; SERVER_ONLINE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getItems().add(event.address);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; SERVER_OFFLINE:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                getItems().remove(event.address);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        notifyDataSetChanged();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And this is the derived class generated by &lt;code&gt;AA&lt;/code&gt; during the compiling-time:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerListAdapter_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerListAdapter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Context context_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerListAdapter_&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context_ = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init_();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; ServerListAdapter_ &lt;span class=&quot;title&quot;&gt;getInstance_&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServerListAdapter_(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init_&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        inflater = ((LayoutInflater) context_.getSystemService(Context.LAYOUT_INFLATER_SERVICE));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context = context_;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bus = Bus_.getInstance_(context_);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        afterInject();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;rebind&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context_ = context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        init_();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;And here is how it is consumed:&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@EFragment&lt;/span&gt;(R.layout.fragment_server_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ServerListFragment&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Fragment&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; DiscoveryService discoveryService;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Bean&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; ServerListAdapter adapter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@ViewById&lt;/span&gt;(R.id.server_list)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; GridView serverGridView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@AfterViews&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;afterViews&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        serverGridView.setAdapter(adapter);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        discoveryService.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onDetach&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;.onDetach();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        discoveryService.stop();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;As you can see, in the &lt;code&gt;ServerListFragment&lt;/code&gt;, the &lt;code&gt;ServerListAdapter&lt;/code&gt; instance injected into &lt;code&gt;bean&lt;/code&gt; is actually the instance of &lt;code&gt;ServerListAdapter_&lt;/code&gt;. And due to polymorphic, the instance just behaves like a &lt;code&gt;ServerListAdapter&lt;/code&gt; instance.&lt;/p&gt;
&lt;p&gt;On the other hand, according to the description on &lt;a href=&quot;http://square.github.io/otto/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Otto’s Home Page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In order to receive events, a class instance needs to register with the bus.&lt;br&gt;…&lt;br&gt;Registering will only find methods on the immediate class type. Unlike the Guava event bus, Otto will not traverse the class hierarchy and add methods from base classes or interfaces that are annotated. This is an explicit design decision to improve performance of the library as well as keep your code simple and unambiguous.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;@Otto&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://square.github.io/otto/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Otto Homepage&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;Otto only search annotations in direct class, which is &lt;code&gt;ServerListAdapter_&lt;/code&gt; in instance, and there isn’t any annotation included. As a consequence, all the &lt;code&gt;@Subscribe&lt;/code&gt; annotated methods are ignored by &lt;code&gt;com.squareup.otto.AnnotatedHandlerFinder&lt;/code&gt;. So the posted events become &lt;code&gt;dead event&lt;/code&gt; due to no subscriber found.&lt;/p&gt;
&lt;h2 id=&quot;Comments&quot;&gt;&lt;a href=&quot;#Comments&quot; class=&quot;headerlink&quot; title=&quot;Comments&quot;&gt;&lt;/a&gt;Comments&lt;/h2&gt;&lt;p&gt;There is &lt;a href=&quot;https://github.com/square/otto/issues/61&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;rumor&lt;/a&gt; that this issue will be fixed in &lt;code&gt;Otto 2.0&lt;/code&gt;. But according to the &lt;a href=&quot;https://github.com/square/otto/issues/61#issuecomment-44453104&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;comment&lt;/a&gt; from &lt;a href=&quot;https://github.com/JakeWharton&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jake Wharton&lt;/a&gt;, Otto’s developer, &lt;code&gt;Otto 2.0&lt;/code&gt; will take forever to release.&lt;/p&gt;
&lt;p&gt;In fact &lt;a href=&quot;https://github.com/square/otto/tree/2.0-wip&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Otto 2.0 Repo&lt;/a&gt; has been not touched for 2 years already. Although we could check out the code and build Otto 2.0 by ourselves, but it takes efforts. Especially when some bug is found.&lt;/p&gt;
&lt;h2 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Luckily, although &lt;code&gt;Otto&lt;/code&gt; turns into “maintenance mode”, the compatibility issue takes forever to resolve. I found a great Otto alternative, EventBus from GreenRobot. A boring name, but great library.&lt;/p&gt;
&lt;p&gt;According to &lt;code&gt;EventBus&lt;/code&gt;‘s document, it provides richer feature and better performance than &lt;code&gt;Otto&lt;/code&gt;.&lt;br&gt;The most important &lt;code&gt;EventBus&lt;/code&gt; is friendly to &lt;code&gt;AndroidAnnoations&lt;/code&gt;. They two works well together.&lt;/p&gt;
&lt;h3 id=&quot;EventBus-and-Otto-Feature-Comparison&quot;&gt;&lt;a href=&quot;#EventBus-and-Otto-Feature-Comparison&quot; class=&quot;headerlink&quot; title=&quot;EventBus and Otto Feature Comparison&quot;&gt;&lt;/a&gt;EventBus and Otto Feature Comparison&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;EventBus&lt;/th&gt;
&lt;th&gt;Otto&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Declare event handling methods&lt;/td&gt;
&lt;td&gt;Name conventions&lt;/td&gt;
&lt;td&gt;Annotations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Event inheritance&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subscriber inheritance&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cache most recent events&lt;/td&gt;
&lt;td&gt;Yes, sticky events&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Event producers (e.g. for coding cached events)&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Event delivery in posting thread&lt;/td&gt;
&lt;td&gt;Yes (Default)&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Event delivery in main thread&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Event delivery in background thread&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Asynchronous event delivery&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;EventBus-and-Otto-Performance-Comparison&quot;&gt;&lt;a href=&quot;#EventBus-and-Otto-Performance-Comparison&quot; class=&quot;headerlink&quot; title=&quot;EventBus and Otto Performance Comparison&quot;&gt;&lt;/a&gt;EventBus and Otto Performance Comparison&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;EventBus over Otto&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Posting 1000 events, Android 2.3 emulator&lt;/td&gt;
&lt;td&gt;~70% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Posting 1000 events, S3 Android 4.0&lt;/td&gt;
&lt;td&gt;~110% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Register 1000 subscribers, Android 2.3 emulator&lt;/td&gt;
&lt;td&gt;~10% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Register 1000 subscribers, S3 Android 4.0&lt;/td&gt;
&lt;td&gt;~70% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Register subscribers cold start, Android 2.3 emulator&lt;/td&gt;
&lt;td&gt;~350% faster&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Register subscribers cold start, S3 Android 4.0&lt;/td&gt;
&lt;td&gt;About the same&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/sq
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Android" scheme="http://timnew.me/categories/programming/android/"/>
    
    
      <category term="event" scheme="http://timnew.me/tags/event/"/>
    
      <category term="google" scheme="http://timnew.me/tags/google/"/>
    
      <category term="programming" scheme="http://timnew.me/tags/programming/"/>
    
      <category term="android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="otto" scheme="http://timnew.me/tags/otto/"/>
    
      <category term="squareUp" scheme="http://timnew.me/tags/squareup/"/>
    
      <category term="greenbot" scheme="http://timnew.me/tags/greenbot/"/>
    
      <category term="event bus" scheme="http://timnew.me/tags/event-bus/"/>
    
      <category term="pub &amp; sub" scheme="http://timnew.me/tags/pub-sub/"/>
    
      <category term="android annotations" scheme="http://timnew.me/tags/android-annotations/"/>
    
      <category term="guava" scheme="http://timnew.me/tags/guava/"/>
    
  </entry>
  
  <entry>
    <title>An interesting share box hover effect</title>
    <link href="http://timnew.me/blog/2014/08/26/an-interesting-share-box-hover-effect/"/>
    <id>http://timnew.me/blog/2014/08/26/an-interesting-share-box-hover-effect/</id>
    <published>2014-08-25T16:13:54.000Z</published>
    <updated>2016-03-25T13:10:45.000Z</updated>
    
    <content type="html">&lt;p&gt;Today I spent some time on customizing the share-box used in this blog.&lt;/p&gt;
&lt;p&gt;Here is the effect&lt;/p&gt;
{% codepen timnew AweKi 7928 result 257 %}
&lt;p&gt;The cover effect for the social network icons are simulate the icon is floating from the background by animating the shadow. In the implementation, I used some shadow described in &lt;a href=&quot;http://timnew.me/blog/2014/08/16/material-design-shadow-in-html/&quot;&gt;Material Design Shadow in HTML&lt;/a&gt;. For the texts, I use the &lt;code&gt;text-shadow&lt;/code&gt; effect that used on the same text shadow used on tht title of the article.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Today I spent some time on customizing the share-box used in this blog.&lt;/p&gt;
&lt;p&gt;Here is the effect&lt;/p&gt;
{% codepen timnew AweKi 7928 result
    
    </summary>
    
      <category term="Design" scheme="http://timnew.me/categories/design/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/design/web/"/>
    
    
      <category term="design" scheme="http://timnew.me/tags/design/"/>
    
      <category term="css" scheme="http://timnew.me/tags/css/"/>
    
      <category term="web" scheme="http://timnew.me/tags/web/"/>
    
      <category term="sharebox" scheme="http://timnew.me/tags/sharebox/"/>
    
      <category term="transition" scheme="http://timnew.me/tags/transition/"/>
    
      <category term="hover" scheme="http://timnew.me/tags/hover/"/>
    
      <category term="effect" scheme="http://timnew.me/tags/effect/"/>
    
      <category term="animation" scheme="http://timnew.me/tags/animation/"/>
    
  </entry>
  
  <entry>
    <title>Hexo file name escape issue and solution</title>
    <link href="http://timnew.me/blog/2014/08/20/hexo-file-name-escape-issue-and-solution/"/>
    <id>http://timnew.me/blog/2014/08/20/hexo-file-name-escape-issue-and-solution/</id>
    <published>2014-08-19T18:49:13.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;I’m working on reorganize posts today, and found some filename issue with &lt;code&gt;Hexo&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Speical-symbols-are-not-escaped-properly&quot;&gt;&lt;a href=&quot;#Speical-symbols-are-not-escaped-properly&quot; class=&quot;headerlink&quot; title=&quot;Speical symbols are not escaped properly&quot;&gt;&lt;/a&gt;Speical symbols are not escaped properly&lt;/h2&gt;&lt;p&gt;Just found this issue today.&lt;/p&gt;
&lt;p&gt;To ensure filename generate from title is legal as either file name or url path, &lt;code&gt;Hexo&lt;/code&gt; uses &lt;a href=&quot;https://github.com/hexojs/hexo/blob/master/lib/util/escape.js#L22&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo.util.escape.filename&lt;/a&gt; to escape the illegal symbols. &lt;code&gt;filename&lt;/code&gt; does escape some symbols, but it doesn’t cover all illegal symbols, such as &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, etc. If these symbols are not escaped properly, which generates illegal url link. As a result, your post will never be acessible.&lt;/p&gt;
&lt;p&gt;I found this issue is because, I have a post with &lt;code&gt;+3 trainer&lt;/code&gt; in its title, since &lt;code&gt;+&lt;/code&gt; is not escaped, and &lt;code&gt;+&lt;/code&gt; will be treated as space by http. As a consequence, my post will never be able to open, unless I escape &lt;code&gt;+&lt;/code&gt; as &lt;code&gt;%2B&lt;/code&gt;. To avoid this kind of problem, I wish all the symbols in post name are escaped as &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Besides this issue, &lt;code&gt;Hexo&lt;/code&gt; has another issue with name escaping that the escaped file name might contains continues &lt;code&gt;-&lt;/code&gt;. For example, your post title is “A great introduction - part 1”, you will get escaped name &lt;code&gt;a-great-introduction---part-1.md&lt;/code&gt;. I wish the continues &lt;code&gt;-&lt;/code&gt; in the file name should be replaced with single &lt;code&gt;-&lt;/code&gt;, name &lt;code&gt;a-great-introduction-part-1.md&lt;/code&gt; is more readable than previous one.&lt;/p&gt;
&lt;p&gt;To fix the 2 issues, I just created a &lt;a href=&quot;https://github.com/hexojs/hexo/pull/804&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pull request&lt;/a&gt;, hope it will be merged soon.&lt;/p&gt;
&lt;p&gt;I cared about this issue so much is because I uses &lt;a href=&quot;https://github.com/timnew/hexo-console-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-consle-rename&lt;/a&gt; plug-in, which also uses &lt;code&gt;util.escape&lt;/code&gt; to handle file name. To keep naming consistency when between different version of &lt;code&gt;Hexo&lt;/code&gt;, I addd a kind of evil &lt;a href=&quot;https://github.com/timnew/hexo-console-rename/blob/master/lib_src/monkey_patch.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;monkey patch&lt;/a&gt; in the &lt;code&gt;v0.1.2&lt;/code&gt;. So make sure the plug in can work properly even with old &lt;code&gt;Hexo&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;File-name-case-issue&quot;&gt;&lt;a href=&quot;#File-name-case-issue&quot; class=&quot;headerlink&quot; title=&quot;File name case issue&quot;&gt;&lt;/a&gt;File name case issue&lt;/h2&gt;&lt;p&gt;Besides the &lt;code&gt;Hexo&lt;/code&gt; naming issue, I also met the case of the filename today. Although it depends on the blog hosting, but it might cause &lt;code&gt;404&lt;/code&gt; if the file name case changed.&lt;/p&gt;
&lt;p&gt;To avoid this kind of issue, I strongly recommend to set &lt;code&gt;filename_case: 1&lt;/code&gt; in &lt;code&gt;_config.yml&lt;/code&gt;, which will make sure all file name are in lower case.&lt;/p&gt;
&lt;p&gt;There is common pitfall here for Windows or Mac with case-insensitive file system. If you have deploy the website once with wrong filename casing. Regenerate after updated &lt;code&gt;filename_case&lt;/code&gt; won’t help, because file system won’t treat case change in filename as “change”. So you cannot really commit the “change” to fix the &lt;code&gt;404&lt;/code&gt; issue.&lt;/p&gt;
&lt;p&gt;To fix this issue, there is easy and efficient trick. Go to &lt;code&gt;.deploy&lt;/code&gt; folder, execute following commands:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ git rm -rf *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ git ci -m &amp;quot;Clean all file&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo d -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To force clean the repo once enforce git to treat 2 files with same name but different casing as different ones. So the name casing issue can be fixed.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I’m working on reorganize posts today, and found some filename issue with &lt;code&gt;Hexo&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Speical-symbols-are-not-escaped-
    
    </summary>
    
      <category term="Practice" scheme="http://timnew.me/categories/practice/"/>
    
      <category term="Hexo" scheme="http://timnew.me/categories/practice/hexo/"/>
    
    
      <category term="escape" scheme="http://timnew.me/tags/escape/"/>
    
      <category term="name" scheme="http://timnew.me/tags/name/"/>
    
      <category term="blog" scheme="http://timnew.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://timnew.me/tags/hexo/"/>
    
      <category term="case" scheme="http://timnew.me/tags/case/"/>
    
      <category term="symbol" scheme="http://timnew.me/tags/symbol/"/>
    
      <category term="http" scheme="http://timnew.me/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Use Hexo Asset Folder to manage resource used by post</title>
    <link href="http://timnew.me/blog/2014/08/19/use-hexo-asset-folder-to-manage-resource-used-by-post/"/>
    <id>http://timnew.me/blog/2014/08/19/use-hexo-asset-folder-to-manage-resource-used-by-post/</id>
    <published>2014-08-19T07:57:18.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; &lt;code&gt;asset folder&lt;/code&gt; is a folder that with the same name as you post file, the content in which will be copied to the folder where the rendered post html file located. It is a great way to keep the relationship between the post and its referenced resources. Personally, I prefers to put all the images or other downloadable files that referenced by the post into its &lt;code&gt;asset folder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Although &lt;code&gt;asset folder&lt;/code&gt; is a great idea, but in practice, there are some common pitfall might disappoint you badly.&lt;/p&gt;
&lt;h2 id=&quot;Relative-Path-Pitfall&quot;&gt;&lt;a href=&quot;#Relative-Path-Pitfall&quot; class=&quot;headerlink&quot; title=&quot;Relative Path Pitfall&quot;&gt;&lt;/a&gt;Relative Path Pitfall&lt;/h2&gt;&lt;p&gt;The idea of &lt;code&gt;asset folder&lt;/code&gt; is actually based on an assumption, that the asset resources will be placed under the same folder with the html. The html can reference these files with relative path.&lt;/p&gt;
&lt;p&gt;Suppose we have following files as post file:&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;-awesome-post&lt;span class=&quot;selector-class&quot;&gt;.md&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;-awesome-post/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  screenshot&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  document.pdf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The compiled file structure will be like this:&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/&lt;span class=&quot;number&quot;&gt;2014&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;/awesome-post/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  index&lt;span class=&quot;selector-class&quot;&gt;.html&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  screenshot&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  document.pdf&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;The asset files are located in the same folder as the html file. So in the post file, you can reference the resource files as&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;ScreenShot&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;screenshot.png&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;Document&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;document.pdf&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Then this will be compiled as following Html:&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;screenshot.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;document.pdf&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;So far it looks great. But if you open your &lt;code&gt;home page&lt;/code&gt; of you site, you find the image isn’t displayed, and the link to &lt;code&gt;document.pdf&lt;/code&gt; is also broken.&lt;/p&gt;
&lt;p&gt;The problem here is that the the relative path assumption only works in &lt;code&gt;/2014/08/19/awesome-post/index.html&lt;/code&gt;. But the content compiled from &lt;code&gt;2014-08-19-awesome-post.md&lt;/code&gt; might also be used by HomePage(&lt;code&gt;/index.html&lt;/code&gt;), Archive Page(&lt;code&gt;/archive/index.html&lt;/code&gt;), and &lt;code&gt;tag pages&lt;/code&gt; and &lt;code&gt;category pages&lt;/code&gt;. For these html pages, the relative path relationship doesn’t exist. So the relative link causes &lt;code&gt;404&lt;/code&gt; error.&lt;/p&gt;
&lt;p&gt;To solve the issue, someone use absolute url in the post. So they write markdown in this way:&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;ScreenShot&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;/2014/08/19/awesome-post/screenshot.png&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;Document&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;/2014/08/19/awesome-post/document.pdf&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This approach fix the link issue, but makes you lost the benefits of using relative path.&lt;/p&gt;
&lt;p&gt;So you need &lt;a href=&quot;https://github.com/timnew/hexo-tag-asset-res&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-tag-asset-res&lt;/a&gt;, which allow you to reference asset resources with relative path. It will convert them into absolute path during compilation. Easy and efficient.&lt;/p&gt;
&lt;h2 id=&quot;Empty-asset-folders&quot;&gt;&lt;a href=&quot;#Empty-asset-folders&quot; class=&quot;headerlink&quot; title=&quot;Empty asset folders&quot;&gt;&lt;/a&gt;Empty asset folders&lt;/h2&gt;&lt;p&gt;For convenience, I turned on the &lt;code&gt;post_asset_folder&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in my &lt;code&gt;_config.yml&lt;/code&gt;. So the &lt;code&gt;asset folder&lt;/code&gt; will be created along with post when I execute &lt;code&gt;hexo new&lt;/code&gt;. It is great because create asset folder manually is boring and error-proning. If you introduced a typo carelessly, the link will be broken immediately.&lt;/p&gt;
&lt;p&gt;But by ask &lt;code&gt;Hexo&lt;/code&gt; to create asset folder automatically causes another problem. I don’t really have asset resources for each post, then there must be a number of empty asset folders. So I wish these folders can be removed if it is empty.&lt;/p&gt;
&lt;p&gt;For this purpose, you might need &lt;a href=&quot;https://github.com/timnew/hexo-console-clean-asset-folder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-console-clean-asset-folder&lt;/a&gt;. This plugin helps you to remove all the empty asset folders automatically.&lt;/p&gt;
&lt;h2 id=&quot;Rename-the-post&quot;&gt;&lt;a href=&quot;#Rename-the-post&quot; class=&quot;headerlink&quot; title=&quot;Rename the post&quot;&gt;&lt;/a&gt;Rename the post&lt;/h2&gt;&lt;p&gt;Well, renaming a post already published is that common. But it is very likely to rename a draft. When renaming the post file, you have to remember also rename the asset folder too, or the link will broken.&lt;/p&gt;
&lt;p&gt;To help you on this issue, you might need &lt;a href=&quot;https://github.com/timnew/hexo-console-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-console-rename&lt;/a&gt;. The plugin helps you to rename the asset folder along with post. And it also helps you on migration once you updated your &lt;code&gt;new_post_name&lt;/code&gt; pattern.&lt;/p&gt;
&lt;p&gt;So this is the common pitfalls in using &lt;code&gt;asset folder&lt;/code&gt; in &lt;code&gt;Hexo&lt;/code&gt;, and the plug-ins that help you to mitigate the pain.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; &lt;code&gt;asset folder&lt;/code&gt; is a folder that with the same name as you pos
    
    </summary>
    
      <category term="Package" scheme="http://timnew.me/categories/package/"/>
    
      <category term="Hexo" scheme="http://timnew.me/categories/package/hexo/"/>
    
    
      <category term="resource" scheme="http://timnew.me/tags/resource/"/>
    
      <category term="asset" scheme="http://timnew.me/tags/asset/"/>
    
      <category term="blog" scheme="http://timnew.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://timnew.me/tags/hexo/"/>
    
      <category term="image" scheme="http://timnew.me/tags/image/"/>
    
      <category term="plugin" scheme="http://timnew.me/tags/plugin/"/>
    
      <category term="management" scheme="http://timnew.me/tags/management/"/>
    
      <category term="clean" scheme="http://timnew.me/tags/clean/"/>
    
      <category term="folder" scheme="http://timnew.me/tags/folder/"/>
    
  </entry>
  
  <entry>
    <title>Hexo plug-in to rename the post according to title automatically</title>
    <link href="http://timnew.me/blog/2014/08/19/hexo-plug-in-to-rename-the-post-according-to-title-automatically/"/>
    <id>http://timnew.me/blog/2014/08/19/hexo-plug-in-to-rename-the-post-according-to-title-automatically/</id>
    <published>2014-08-18T17:17:28.000Z</published>
    <updated>2014-09-19T03:00:22.000Z</updated>
    
    <content type="html">&lt;p&gt;When writing blog with [Hexo], I uses &lt;code&gt;hexo new&lt;/code&gt; command to create new post file. If the title of the post is provided, then the file is named according to the tile. This is super convinient, and I’m really loving it.&lt;/p&gt;
&lt;p&gt;But there is problem! If I changed my mind when during the writing, so I changed the title of the post. As a consequence, the post file name doesn’t match to the post title any longer.&lt;/p&gt;
&lt;p&gt;In the past, I have to rename the post file manually. If there is asset folder, I also have to remember rename it accordingly. And I have to becareful to avoid introduce typo, or it either break the reference or cause other problems.&lt;/p&gt;
&lt;p&gt;Besides, if you have special name pattern for your post, such as have time-stamp in your post name. The problem is more complicated. You have to reserve the time-stamp carefully, and replace all the space or any other improper characters with &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At least for me, it is a complicated, error-proning and unpleasant work to do.&lt;/p&gt;
&lt;p&gt;I’m a lazy guy, I don’t want to repeat this pain time and time again. To save myself from such pain, I create the plug-in &lt;a href=&quot;https://github.com/timnew/hexo-console-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-console-rename&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The plug-in reads the &lt;code&gt;front-matter&lt;/code&gt; of the post, then figure out the proper name. It is smart enough to know what is the proper name for the post, when you changed your configuration, it changes its behavior also.&lt;/p&gt;
&lt;p&gt;To use the plug-in is super easy. I usually use it in this way:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo r source/**/*.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Then it scans all the posts for me, and fix the filename when necessary. Easy and efficient.&lt;/p&gt;
&lt;h2 id=&quot;Advanced-Usages&quot;&gt;&lt;a href=&quot;#Advanced-Usages&quot; class=&quot;headerlink&quot; title=&quot;Advanced Usages&quot;&gt;&lt;/a&gt;Advanced Usages&lt;/h2&gt;&lt;p&gt;Actually after I created the plugin, I figured out sevearl advance usages of this plug-in. Sometimes, it could become your life savor!&lt;/p&gt;
&lt;h3 id=&quot;new-post-name-updated&quot;&gt;&lt;a href=&quot;#new-post-name-updated&quot; class=&quot;headerlink&quot; title=&quot;new_post_name updated&quot;&gt;&lt;/a&gt;&lt;code&gt;new_post_name&lt;/code&gt; updated&lt;/h3&gt;&lt;p&gt;If you change the &lt;code&gt;new_post_name&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;. You new post will follow a different name pattern than old ones. At this time, you might really want to rename all the old posts to keep consistency! But do it manually is a painful job to do!&lt;/p&gt;
&lt;p&gt;Then &lt;a href=&quot;https://github.com/timnew/hexo-console-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-console-rename&lt;/a&gt; is your live-savor! You just run&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo r -p &amp;apos;:title.md&amp;apos; source/**/*.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Then all the old files will be renamed under your new naming rule! Aesome!&lt;/p&gt;
&lt;h3 id=&quot;date-in-your-post-changed&quot;&gt;&lt;a href=&quot;#date-in-your-post-changed&quot; class=&quot;headerlink&quot; title=&quot;date in your post changed&quot;&gt;&lt;/a&gt;&lt;code&gt;date&lt;/code&gt; in your post changed&lt;/h3&gt;&lt;p&gt;It isn’t a common case, but if you have changed the &lt;code&gt;date&lt;/code&gt; field in the &lt;code&gt;front-matter&lt;/code&gt; of your post. And you have time-stamp in your file name. You can also use &lt;a href=&quot;https://github.com/timnew/hexo-console-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-console-rename&lt;/a&gt; to rename the file for you.&lt;/p&gt;
&lt;p&gt;For more detail, check out the &lt;a href=&quot;https://github.com/timnew/hexo-console-rename&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-console-rename&lt;/a&gt; home page.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;When writing blog with [Hexo], I uses &lt;code&gt;hexo new&lt;/code&gt; command to create new post file. If the title of the post is provided, then t
    
    </summary>
    
      <category term="Package" scheme="http://timnew.me/categories/package/"/>
    
      <category term="Hexo" scheme="http://timnew.me/categories/package/hexo/"/>
    
    
      <category term="hexo" scheme="http://timnew.me/tags/hexo/"/>
    
      <category term="plugin" scheme="http://timnew.me/tags/plugin/"/>
    
      <category term="rename" scheme="http://timnew.me/tags/rename/"/>
    
      <category term="post" scheme="http://timnew.me/tags/post/"/>
    
      <category term="title" scheme="http://timnew.me/tags/title/"/>
    
  </entry>
  
  <entry>
    <title>Trick to use CoffeeScript in Hexo</title>
    <link href="http://timnew.me/blog/2014/08/18/trick-to-use-coffeescript-in-hexo/"/>
    <id>http://timnew.me/blog/2014/08/18/trick-to-use-coffeescript-in-hexo/</id>
    <published>2014-08-18T10:19:44.000Z</published>
    <updated>2016-03-25T13:01:38.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; has a &lt;code&gt;scripts&lt;/code&gt; folder, and the files under which are loaded by &lt;code&gt;Hexo&lt;/code&gt; when start. I usually uses this folder as the development folder for my plug-in scripts. And extract them into independent package after polished it into package-ready quality.&lt;/p&gt;
&lt;p&gt;Usually, the files under scripts should be &lt;code&gt;javascripts&lt;/code&gt;. But as I’m a fan of &lt;a href=&quot;http://coffeescript.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Coffee Script&lt;/a&gt;, so I wish to use &lt;code&gt;coffee-script&lt;/code&gt; to write the plug-ins. For the formal package, I compile the &lt;code&gt;coffee scripts&lt;/code&gt; into &lt;code&gt;javascripts&lt;/code&gt; before release. But for development, I wish to use &lt;code&gt;coffee script&lt;/code&gt; directly.&lt;/p&gt;
&lt;p&gt;In &lt;code&gt;node.js&lt;/code&gt;, it is possible to require &lt;code&gt;coffee-script&lt;/code&gt; directly, if you registered the &lt;code&gt;coffee-script&lt;/code&gt; runtime compiler:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;coffee-script/register&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And as how node.js &lt;code&gt;require&lt;/code&gt; function is implemented, you cannot register &lt;code&gt;coffee-script&lt;/code&gt; runtime compiler in &lt;code&gt;.coffee&lt;/code&gt; file. Or the compiler will complain:&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[error] &lt;span class=&quot;symbol&quot;&gt;HexoError:&lt;/span&gt; Script load &lt;span class=&quot;symbol&quot;&gt;failed:&lt;/span&gt; plugin.coffee&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;SyntaxError:&lt;/span&gt; Unexpected string&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Module._compile (&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:439:25)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Object.Module._extensions..js (&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:474:10)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Module.load (&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:356:32)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Function.Module._load (&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:312:12)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Module.&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; (&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:364:17)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at &lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; (&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;module&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:380:17)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;node_modules&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;hexo&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;loaders&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;scripts&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:17:11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Array.forEach (native)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;node_modules&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;hexo&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;loaders&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;scripts&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:15:13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;node_modules&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;hexo&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;util&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;file2&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:339:7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at done (&lt;span class=&quot;regexp&quot;&gt;/usr/local&lt;/span&gt;&lt;span class=&quot;regexp&quot;&gt;/lib/node&lt;/span&gt;_modules/hexo/node_modules/async/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;async&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:135:19)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;node_modules&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;hexo&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;node_modules&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;async&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;async&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:32:16&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at /usr/local/&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;node_modules&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;hexo&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;lib&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;util&lt;/span&gt;/&lt;span class=&quot;title&quot;&gt;file2&lt;/span&gt;.&lt;span class=&quot;title&quot;&gt;js&lt;/span&gt;:335:11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  at Object.oncomplete (evalmachine.&amp;lt;anonymous&amp;gt;:&lt;span class=&quot;number&quot;&gt;107&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Theoretically, it is possible to put the &lt;code&gt;coffee-script&lt;/code&gt; registration code in a &lt;code&gt;javascript&lt;/code&gt; file and also put it under &lt;code&gt;/scripts&lt;/code&gt; folder. SO &lt;code&gt;Hexo&lt;/code&gt; will load it when start-up.&lt;/p&gt;
&lt;p&gt;Well, this approach doesn’t really work. If you try it, it is very likely to get the exactly same error as before. The reason is related to &lt;code&gt;Hexo&lt;/code&gt; implementation. &lt;code&gt;Hexo&lt;/code&gt; uses &lt;a href=&quot;https://github.com/hexojs/hexo/blob/master/lib/loaders/scripts.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scripts Loader&lt;/a&gt; to require files under &lt;code&gt;/scripts&lt;/code&gt;. The loader doesn’t really provide an explicit way to specify which file is loaded before another. So the registration file is guaranteed to be loaded before any &lt;code&gt;.coffee&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So far, it seems that there is no cure to this problem! But actually it does. There is undocumented feature will help to solve this issue.&lt;/p&gt;
&lt;p&gt;Hexo uses [Script Loader] to load the scripts. In &lt;a href=&quot;https://github.com/hexojs/hexo/blob/master/lib/loaders/scripts.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Scripts Loader&lt;/a&gt; use &lt;a href=&quot;https://github.com/hexojs/hexo/blob/master/lib/util/file2.js#L313&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo.util.file2&lt;/a&gt; to populate the source files under &lt;code&gt;/scripts&lt;/code&gt;. And &lt;a href=&quot;https://github.com/hexojs/hexo/blob/master/lib/util/file2.js#L313&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo.util.file2&lt;/a&gt; use &lt;a href=&quot;http://nodejs.org/api/fs.html#fs_fs_readdir_path_callback&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fs.readdir&lt;/a&gt; to actully populate the file system entries. For &lt;a href=&quot;http://nodejs.org/api/fs.html#fs_fs_readdir_path_callback&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fs.readdir&lt;/a&gt;, there is a undocumented feature, that the populated entries are actually sorted alphabetically, which means &lt;code&gt;a.js&lt;/code&gt; is loaded before &lt;code&gt;b.coffee&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With this feature, we can put our &lt;code&gt;coffee-script&lt;/code&gt; registration in a file with lower alphabetic-order name. Personally, I’d like called &lt;code&gt;___register_coffeescript.js&lt;/code&gt;, since &lt;code&gt;_&lt;/code&gt; is smaller than any letter or number.&lt;/p&gt;
&lt;p&gt;⚠️&lt;strong&gt;WARNING&lt;/strong&gt;: &lt;a href=&quot;http://nodejs.org/api/fs.html#fs_fs_readdir_path_callback&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;fs.readdir&lt;/a&gt; yielding sorted files is an undocumented behavior, which means it is not guaranteed either to work across platforms or not get changed in the future. So for, it works on Mac, and I expect it behaves similar on Linux. But not sure about Windows, since &lt;code&gt;fs&lt;/code&gt; uses a different native binding on Windows.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; has a &lt;code&gt;scripts&lt;/code&gt; folder, and the files under which are loaded
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="node.js" scheme="http://timnew.me/categories/programming/node-js/"/>
    
    
      <category term="script" scheme="http://timnew.me/tags/script/"/>
    
      <category term="trick" scheme="http://timnew.me/tags/trick/"/>
    
      <category term="hexo" scheme="http://timnew.me/tags/hexo/"/>
    
      <category term="plug-in" scheme="http://timnew.me/tags/plug-in/"/>
    
      <category term="coffee" scheme="http://timnew.me/tags/coffee/"/>
    
      <category term="hack" scheme="http://timnew.me/tags/hack/"/>
    
  </entry>
  
  <entry>
    <title>New Favicon design for my blog</title>
    <link href="http://timnew.me/blog/2014/08/18/new-favicon-design-for-my-blog/"/>
    <id>http://timnew.me/blog/2014/08/18/new-favicon-design-for-my-blog/</id>
    <published>2014-08-17T16:18:04.000Z</published>
    <updated>2016-03-25T13:04:24.000Z</updated>
    
    <content type="html">&lt;p&gt;To ㊗️ my wife passed driver license theory course, I created a new log for my blog 😝&lt;/p&gt;
&lt;p&gt;Here is what I got:&lt;/p&gt;
&lt;img src=&quot;/blog/2014/08/18/new-favicon-design-for-my-blog/logo.png&quot; alt=&quot;Logo for ThoughtWorkshop&quot; title=&quot;Logo for ThoughtWorkshop&quot;&gt;
&lt;h2 id=&quot;Gear&quot;&gt;&lt;a href=&quot;#Gear&quot; class=&quot;headerlink&quot; title=&quot;Gear&quot;&gt;&lt;/a&gt;Gear&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Gear&lt;/code&gt; is the hint of workshop. Because this blog is named as &lt;code&gt;TimNew&amp;#39;s ThoughtWorkshop&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In the beginning, I was intend to create the gear in &lt;a href=&quot;https://www.google.com/search?q=steampunk%20gear&amp;amp;tbm=isch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Steampunk style&lt;/a&gt;. I like such old-fashioned style, but later I found such style is not distinguishable in small icon, so I simplified it to the dark-metel gear.&lt;/p&gt;
&lt;h2 id=&quot;D&quot;&gt;&lt;a href=&quot;#D&quot; class=&quot;headerlink&quot; title=&quot;D&quot;&gt;&lt;/a&gt;D&lt;/h2&gt;&lt;p&gt;Letter &lt;code&gt;D&lt;/code&gt; is from the pronunciation of my Chinese name, which might not be well-known. It is a personal logo, so I wish to have something personal in it.&lt;/p&gt;
&lt;p&gt;The font is &lt;code&gt;Gear Box&lt;/code&gt; from &lt;a href=&quot;http://moorstation.org/typoasis/designers/gaut/index.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gaut Fonts&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It is an awesome font to create some mechanical feel design.&lt;/p&gt;
&lt;img src=&quot;/blog/2014/08/18/new-favicon-design-for-my-blog/gearbox.jpg&quot; alt=&quot;Gear Box Logo&quot; title=&quot;Gear Box Logo&quot;&gt;
&lt;p&gt;The rainbow color is the hint of unrestrained idea and inspiration. In Chinese, it reads 天 🌌 马 🐎 行 ✈️ 空 🚀 不 🚫 靠 🎵 谱.&lt;/p&gt;
&lt;p&gt;Well, this is it.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;To ㊗️ my wife passed driver license theory course, I created a new log for my blog 😝&lt;/p&gt;
&lt;p&gt;Here is what I got:&lt;/p&gt;
&lt;img src=&quot;/blog/2014
    
    </summary>
    
      <category term="Design" scheme="http://timnew.me/categories/design/"/>
    
      <category term="Visual" scheme="http://timnew.me/categories/design/visual/"/>
    
    
      <category term="blog" scheme="http://timnew.me/tags/blog/"/>
    
      <category term="icon" scheme="http://timnew.me/tags/icon/"/>
    
      <category term="favico" scheme="http://timnew.me/tags/favico/"/>
    
      <category term="logo" scheme="http://timnew.me/tags/logo/"/>
    
      <category term="timnew" scheme="http://timnew.me/tags/timnew/"/>
    
      <category term="D" scheme="http://timnew.me/tags/d/"/>
    
  </entry>
  
  <entry>
    <title>Favicon is not as simple as you think</title>
    <link href="http://timnew.me/blog/2014/08/18/favicon-is-not-as-simple-as-you-think/"/>
    <id>http://timnew.me/blog/2014/08/18/favicon-is-not-as-simple-as-you-think/</id>
    <published>2014-08-17T16:04:36.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;Favicon&lt;/code&gt; is the little icon that displayed on the title bar or tab bar when you browsing a web site. At very beginning, it is used to be the little icon displayed in favoriate bar when user add the website to favorites. Then later, it becomes the the standard way to specify custom icon for a website.&lt;/p&gt;
&lt;p&gt;Most web site provides &lt;code&gt;favico&lt;/code&gt;, developer add one line description in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/favico.ico&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/x-icon&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;This simple piece of code works, but there are a lot of issues with this declaration. Actually specify the &lt;code&gt;favico&lt;/code&gt; isn’t as simple as you might expect!&lt;/p&gt;
&lt;p&gt;For this piece of code, according to W3C document &lt;a href=&quot;http://www.w3.org/2005/10/howto-favicon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;how to favicon&lt;/a&gt;, there are 2 issues with it:&lt;/p&gt;
&lt;p&gt;First, &lt;code&gt;shortcut&lt;/code&gt; isn’t a standard value for &lt;code&gt;rel&lt;/code&gt;, it is only for &lt;code&gt;IE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Second, &lt;code&gt;ico&lt;/code&gt; format is a Microsoft oriented file type, not all platform likes it. Linux, Mac, iOS, Android, do not really appreciate this format.&lt;/p&gt;
&lt;p&gt;Beides the 2 issues described above, the size of the &lt;code&gt;favicon&lt;/code&gt; also matters.&lt;/p&gt;
&lt;p&gt;Someone says it should be &lt;code&gt;16x16&lt;/code&gt;. Yes, &lt;code&gt;16x16&lt;/code&gt; icon is used in tab or tree view. Some other says it should be &lt;code&gt;32x32&lt;/code&gt;. Well, this is also true. &lt;code&gt;32x32&lt;/code&gt; icon is displayed in toolbar.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;16x16&lt;/code&gt; and &lt;code&gt;32x32&lt;/code&gt; are the most used sizes for &lt;code&gt;favico&lt;/code&gt;, but that’s not all. The reality is a lot complicated, I’ll explain this issue later. Let focus on this 2 size first.&lt;/p&gt;
&lt;p&gt;To provide the image with 2 different sizes. For &lt;code&gt;ico&lt;/code&gt; it is not an issue, since &lt;code&gt;ico&lt;/code&gt; is a image container file format, which can encapsulate several images with different sizes and color in a single file. It is convenient for developer, but not for users. Because it means the users need to download a big file, most of the data in which is not used at all.&lt;/p&gt;
&lt;p&gt;For the recommended &lt;code&gt;png&lt;/code&gt;, it is no way to provide multiple images in a single file. So we have to provide 2 different separate files, and specify them with 2 different &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags with &lt;code&gt;sizes&lt;/code&gt; attribute. This is a more efficient way, but unfortunately, you’re living in the world has something called &lt;code&gt;Internet Explorer&lt;/code&gt;. The &lt;code&gt;favico&lt;/code&gt; in &lt;code&gt;png&lt;/code&gt; is not supported by IE until &lt;code&gt;IE 11&lt;/code&gt;. What a hell!&lt;/p&gt;
&lt;p&gt;Actually, there is a lot of issue with IE in this case. There is an &lt;a href=&quot;https://mathiasbynens.be/notes/rel-shortcut-icon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;great article&lt;/a&gt; by Mathias Bynen that discussed this issue in detail, which provides a lot of interesting information related to &lt;code&gt;favico&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Microsoft-Windows-8&quot;&gt;&lt;a href=&quot;#Microsoft-Windows-8&quot; class=&quot;headerlink&quot; title=&quot;Microsoft Windows 8&quot;&gt;&lt;/a&gt;Microsoft Windows 8&lt;/h3&gt;&lt;p&gt;Besides typical browser usage, &lt;code&gt;Favicon&lt;/code&gt; is also used to create &lt;code&gt;Metro Tile&lt;/code&gt; by &lt;code&gt;IE 10&lt;/code&gt; and &lt;code&gt;IE 11&lt;/code&gt; on Windows 8. It requires something quite different. Here is a MSDN document that described how to &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ie/dn455106(v=vs.85).aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;create custom tiles for IE11 websites&lt;/a&gt;. For these &lt;code&gt;tile icon&lt;/code&gt;, Windows 8 also asks for a background color other than the icon itself.&lt;/p&gt;
&lt;h3 id=&quot;Android&quot;&gt;&lt;a href=&quot;#Android&quot; class=&quot;headerlink&quot; title=&quot;Android&quot;&gt;&lt;/a&gt;Android&lt;/h3&gt;&lt;p&gt;In the age of mobile internet, &lt;code&gt;favicon&lt;/code&gt; is not just used by the desktop browser, but also mobile devices. On mobile devices, there are some more specific requirements.&lt;/p&gt;
&lt;p&gt;On android, the screen size and resolution varies between devices. So the visual elements on Android are measured in &lt;code&gt;dp&lt;/code&gt;. According to the screen resolution, there are different conversion ratios between &lt;code&gt;dp&lt;/code&gt; and &lt;code&gt;px&lt;/code&gt;. And to have pixel perfect image on Android, developer should provide several images for different &lt;code&gt;dp-px-ratios&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Google have a well written document that described how to create icon for the web app that &lt;a href=&quot;https://developer.chrome.com/multidevice/android/installtohomescreen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;added to homescreen&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;iOS&quot;&gt;&lt;a href=&quot;#iOS&quot; class=&quot;headerlink&quot; title=&quot;iOS&quot;&gt;&lt;/a&gt;iOS&lt;/h3&gt;&lt;p&gt;For iOS, it is simliar to Android, but seems to be much more complicated. On iOS, it is also possible to create a shortcut for the web apps. Apple named such icon as &lt;code&gt;apple touch icon&lt;/code&gt;, which is used by Safari and other browsers on iOS.&lt;/p&gt;
&lt;p&gt;For the iOS devices, iPhone and iPad have different screen sizes, so they have different size requirements for &lt;code&gt;touch icon&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Furthermore, there are device with &lt;code&gt;retina&lt;/code&gt; display and with normal one. To have pixel perfect image on &lt;code&gt;retina display&lt;/code&gt;, it requires the resolution of the image to be doubled.&lt;/p&gt;
&lt;p&gt;And since iOS 7, iOS changed its UI style, the icon size used by iOS 7 is also slightly changed. So you should provide new icons for iOS 7 devices!&lt;/p&gt;
&lt;p&gt;To make the icon fit iOS visual style best, Apple recommend web application to provide &lt;code&gt;precomposed icon&lt;/code&gt;, which is a icon that added &lt;code&gt;rounded corner&lt;/code&gt; and background by itself.&lt;/p&gt;
&lt;p&gt;To have the pixel perfect icon on iOS, you might need to provide around 10 different images files as &lt;code&gt;apple touch icon&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;What a hell!!!! The &lt;code&gt;touch icon&lt;/code&gt; on iOS is totally a mess!!!!&lt;/p&gt;
&lt;p&gt;Here is a document from Apple that describes how &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;configure web application icon&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Other&quot;&gt;&lt;a href=&quot;#Other&quot; class=&quot;headerlink&quot; title=&quot;Other&quot;&gt;&lt;/a&gt;Other&lt;/h3&gt;&lt;p&gt;Besides all cases that describe above, &lt;code&gt;favicon&lt;/code&gt; is also used in some special cases, such as &lt;a href=&quot;https://developers.google.com/tv/web/docs/design_for_tv#favicons&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google TV&lt;/a&gt;, &lt;a href=&quot;http://operacoast.com/developer#icon&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Opera Speed Dial&lt;/a&gt;, Chrome Web App. They all requires different size of &lt;code&gt;favico&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Conclusion&quot;&gt;&lt;a href=&quot;#Conclusion&quot; class=&quot;headerlink&quot; title=&quot;Conclusion&quot;&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;&lt;p&gt;In a short description, &lt;code&gt;favico&lt;/code&gt; isn’t as simple as it looks. And it actually used wrongly by most websites.&lt;br&gt;To provide proper &lt;code&gt;favico&lt;/code&gt; for all platforms and devices is not a simple work to do.&lt;br&gt;Here is the &lt;code&gt;favico&lt;/code&gt; declaration that used this blog:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;57x57&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-57x57.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;114x114&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-114x114.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;72x72&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-72x72.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;144x144&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-144x144.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;60x60&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-60x60.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;120x120&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-120x120.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;76x76&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-76x76.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;152x152&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/apple-touch-icon-152x152.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/favicon-196x196.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;196x196&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/favicon-160x160.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;160x160&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/favicon-96x96.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;96x96&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/favicon-16x16.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;16x16&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/favicon-32x32.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;sizes&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;32x32&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;msapplication-TileColor&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;#00a300&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;msapplication-TileImage&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;/mstile-144x144.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And these files are served on this blog as &lt;code&gt;favico&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;favicon&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.ico&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;favicon-16x16&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;favicon-32x32&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;favicon-96x96&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;favicon-160x160&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;favicon-196x196&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-precomposed&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-57x57&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-60x60&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-72x72&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-76x76&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-114x114&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-120x120&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-144x144&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;apple-touch-icon-152x152&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;browserconfig&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.xml&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mstile-70x70&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mstile-144x144&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mstile-150x150&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mstile-310x150&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;mstile-310x310&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;As you can see, to prepare all these configurations and files is not an easy job to do. It really consumes you a lot effort.&lt;/p&gt;
&lt;p&gt;Fortunately, we have the awesome &lt;a href=&quot;http://realfavicongenerator.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Real Favicon Generator&lt;/a&gt; brought by &lt;a href=&quot;https://github.com/phbernard/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Philippe Bernard&lt;/a&gt;, which will save your tons of time to have the proper fav icon configuration.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Real Favicon Generator&lt;/code&gt; also comes with a &lt;a href=&quot;http://realfavicongenerator.net/favicon_checker&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;favicon checker&lt;/a&gt;, which check the favorite configuration for your website, and generates  &lt;a href=&quot;http://realfavicongenerator.net/favicon_checker?site=timnew.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;beautiful report&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At last the &lt;a href=&quot;http://realfavicongenerator.net/faq&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FAQ&lt;/a&gt; of the site also provides a good explanation of the issue described above in details. Hope it helps.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Favicon&lt;/code&gt; is the little icon that displayed on the title bar or tab bar when you browsing a web site. At very beginning, it is
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/programming/web/"/>
    
    
      <category term="design" scheme="http://timnew.me/tags/design/"/>
    
      <category term="html" scheme="http://timnew.me/tags/html/"/>
    
      <category term="android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="deployment" scheme="http://timnew.me/tags/deployment/"/>
    
      <category term="web" scheme="http://timnew.me/tags/web/"/>
    
      <category term="icon" scheme="http://timnew.me/tags/icon/"/>
    
      <category term="logo" scheme="http://timnew.me/tags/logo/"/>
    
      <category term="favicon" scheme="http://timnew.me/tags/favicon/"/>
    
      <category term="website" scheme="http://timnew.me/tags/website/"/>
    
      <category term="iOS" scheme="http://timnew.me/tags/ios/"/>
    
      <category term="windows 8" scheme="http://timnew.me/tags/windows-8/"/>
    
      <category term="tile" scheme="http://timnew.me/tags/tile/"/>
    
  </entry>
  
  <entry>
    <title>Embed CodePen snippet in Hexo</title>
    <link href="http://timnew.me/blog/2014/08/17/embed-codepen-snippet-in-hexo/"/>
    <id>http://timnew.me/blog/2014/08/17/embed-codepen-snippet-in-hexo/</id>
    <published>2014-08-17T04:49:50.000Z</published>
    <updated>2016-03-25T13:10:18.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://codepen.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt; is a service that provide &lt;code&gt;Html&lt;/code&gt;, &lt;code&gt;JavaScript&lt;/code&gt; and &lt;code&gt;Css&lt;/code&gt; live show-case. It is another clone of &lt;a href=&quot;http://jsfiddle.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Js Fiddle&lt;/a&gt;, but with cooler UI and support.&lt;/p&gt;
&lt;p&gt;Both &lt;code&gt;CodePen&lt;/code&gt; and &lt;code&gt;Js Fiddle&lt;/code&gt; provides embedded widget that allow user to embedded their code into blog or articles.&lt;/p&gt;
&lt;p&gt;Here is the example, code from &lt;code&gt;CodePen&lt;/code&gt;:&lt;/p&gt;
{% codepen timnew cGEqB 7928 result 257 %}
&lt;p&gt;This is from &lt;code&gt;Js Fiddle&lt;/code&gt;:&lt;/p&gt;
&lt;iframe scrolling=&quot;no&quot; width=&quot;100%&quot; height=&quot;300&quot; src=&quot;http://jsfiddle.net/timnew/r3j6a92c/4/embedded/result,css,html,js/light&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; has built-in the &lt;a href=&quot;http://hexo.io/docs/tag-plugins.html#jsFiddle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Js Fiddle Plug-in&lt;/a&gt; to allow writer to embed code from &lt;code&gt;Js Fiddle&lt;/code&gt;, which is probably ported from &lt;code&gt;Octopress&lt;/code&gt;.&lt;br&gt;But for &lt;code&gt;CodePen&lt;/code&gt;, there is not such thing.&lt;/p&gt;
&lt;p&gt;So I created &lt;a href=&quot;https://github.com/timnew/hexo-tag-codepen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-tag-codepen&lt;/a&gt;, its provides similar syntax as built-in ‘Js Fiddle’ plug in:&lt;/p&gt;
&lt;figure class=&quot;highlight django&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;raw&lt;/span&gt; %&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;% &lt;span class=&quot;name&quot;&gt;codepen&lt;/span&gt; userId|anonymous|anon slugHash theme [defaultTab [height [width]]] %&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;span class=&quot;template-tag&quot;&gt;&amp;#123;%&lt;span class=&quot;name&quot;&gt;endraw&lt;/span&gt;%&amp;#125;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now you can embedded &lt;code&gt;Pens&lt;/code&gt; from &lt;code&gt;CodePen&lt;/code&gt; in your &lt;code&gt;Hexo&lt;/code&gt; blog. Enjoy.&lt;/p&gt;
&lt;p&gt;For detail, check out &lt;a href=&quot;https://github.com/timnew/hexo-tag-codepen&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-tag-codepen&lt;/a&gt; document.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://codepen.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CodePen&lt;/a&gt; is a service that provide &lt;code&gt;Html&lt;/code&gt;, &lt;code&gt;JavaScript&lt;/co
    
    </summary>
    
      <category term="Package" scheme="http://timnew.me/categories/package/"/>
    
      <category term="Hexo" scheme="http://timnew.me/categories/package/hexo/"/>
    
    
      <category term="node.js" scheme="http://timnew.me/tags/node-js/"/>
    
      <category term="blog" scheme="http://timnew.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://timnew.me/tags/hexo/"/>
    
      <category term="tag" scheme="http://timnew.me/tags/tag/"/>
    
      <category term="plugin" scheme="http://timnew.me/tags/plugin/"/>
    
      <category term="codepen" scheme="http://timnew.me/tags/codepen/"/>
    
      <category term="embedded" scheme="http://timnew.me/tags/embedded/"/>
    
  </entry>
  
  <entry>
    <title>Complex Value Array in Stylus</title>
    <link href="http://timnew.me/blog/2014/08/16/complex-value-array-in-stylus/"/>
    <id>http://timnew.me/blog/2014/08/16/complex-value-array-in-stylus/</id>
    <published>2014-08-16T15:32:38.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://learnboost.github.io/stylus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stylus&lt;/a&gt; is an awesome CSS pre-processor, which provides much more concise syntax and more powerful feature than its competitors, such as &lt;a href=&quot;http://lesscss.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LESS&lt;/a&gt; or &lt;a href=&quot;http://sass-lang.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SCSS&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But now, with more and more features added into &lt;code&gt;Stylus&lt;/code&gt;, it seems its syntax become over-weighted. Pitfall come up.&lt;/p&gt;
&lt;p&gt;I wish to declare an array of values for &lt;code&gt;box-shadow&lt;/code&gt; property. And I can reference them with index:&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;drop-shadows = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.16&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.19&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.19&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.21&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;40px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;77px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;drop-shadow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt; shadows[n]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .drop-shadow-&amp;#123;i&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    drop-shadow(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;And expect it generates&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.drop-shadow-1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.16);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.drop-shadow-2&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.19);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.drop-shadow-3&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.19);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.drop-shadow-4&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.21);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.drop-shadow-5&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;40px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;77px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;rgba&lt;/span&gt;(0, 0, 0, 0.22;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;del&gt;But I found there is not such thing called &lt;code&gt;Array&lt;/code&gt; in &lt;code&gt;Stylus&lt;/code&gt;!!!!&lt;del&gt;&lt;br&gt;There is only &lt;code&gt;Hash&lt;/code&gt;, and Hash doesn’t accept number as key!&lt;br&gt;So finally, I come up something like this:&lt;/del&gt;&lt;/del&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;drop-shadows = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.16&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;2&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.19&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;3&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.19&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;4&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.21&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;5&#39;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;40px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;77px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;drop-shadow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt; shadows[n+&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .drop-shadow-&amp;#123;i&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    drop-shadow(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;In this piece of code, there are a bunch of pitfalls:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hash doesn’t accept number as key. So &lt;code&gt;1: 0 2px 10px 0 rgba(0, 0, 0, 0.16)&lt;/code&gt; cause compile error.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#39;1&amp;#39; != 1&lt;/code&gt;, so &lt;code&gt;drop-shadows[1]&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;There is no type conversion function in &lt;code&gt;Stylus&lt;/code&gt;, use the same trick as &lt;code&gt;JavaScript&lt;/code&gt;. &lt;code&gt;&amp;#39;&amp;#39;+n&lt;/code&gt; convert &lt;code&gt;n&lt;/code&gt; into &lt;code&gt;string&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;Just found &lt;code&gt;Stylus&lt;/code&gt; provides something called &lt;code&gt;List&lt;/code&gt;, which is pretty much similar to what array in other languages, except the syntax.&lt;/p&gt;
&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;drop-shadows = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.16&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;6px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.19&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.19&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;55px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.21&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;40px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;77px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; rgba(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0.22&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;drop-shadow&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(n)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt; shadows[n]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;..&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  .drop-shadow-&amp;#123;i&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    drop-shadow(i)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;So no brackets or parentesis needed.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://learnboost.github.io/stylus/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stylus&lt;/a&gt; is an awesome CSS pre-processor, which provides m
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/programming/web/"/>
    
    
      <category term="pitfall" scheme="http://timnew.me/tags/pitfall/"/>
    
      <category term="hash" scheme="http://timnew.me/tags/hash/"/>
    
      <category term="array" scheme="http://timnew.me/tags/array/"/>
    
      <category term="css" scheme="http://timnew.me/tags/css/"/>
    
      <category term="workaround" scheme="http://timnew.me/tags/workaround/"/>
    
      <category term="box-shadow" scheme="http://timnew.me/tags/box-shadow/"/>
    
      <category term="stylus" scheme="http://timnew.me/tags/stylus/"/>
    
  </entry>
  
  <entry>
    <title>Material Design Shadow in HTML</title>
    <link href="http://timnew.me/blog/2014/08/16/material-design-shadow-in-html/"/>
    <id>http://timnew.me/blog/2014/08/16/material-design-shadow-in-html/</id>
    <published>2014-08-16T09:45:05.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Working on &lt;code&gt;Hexo&lt;/code&gt; theme customization in past few days. And wish to borrow some concepts from Google’s &lt;a href=&quot;http://www.google.com/design/spec/material-design/introduction.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Material Design&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The concept that I’m interested most in &lt;code&gt;Material Design&lt;/code&gt; is the &lt;a href=&quot;http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Dimensionality&lt;/a&gt;. It identify visual area on the page with &lt;code&gt;Shadow&lt;/code&gt;.&lt;br&gt;By defining multiple shadow configuration, it creates layers in a 2-D space! Simple and efficient. What a graceful solution!&lt;/p&gt;
&lt;p&gt;By referencing the &lt;a href=&quot;http://www.google.com/design/spec/layout/layout-principles.html#dimensionality-%20Shadows-1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Shadow Definition&lt;/a&gt; in the spec, I recreate the effect with plain CSS.&lt;/p&gt;
&lt;p&gt;Clicking the div will shift the shadow depth.&lt;/p&gt;
&lt;iframe scrolling=&quot;no&quot; width=&quot;100%&quot; height=&quot;300&quot; src=&quot;http://jsfiddle.net/timnew/r3j6a92c/4/embedded/result,css,html,js/light&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Mobile-Support&quot;&gt;&lt;a href=&quot;#Mobile-Support&quot; class=&quot;headerlink&quot; title=&quot;Mobile Support&quot;&gt;&lt;/a&gt;Mobile Support&lt;/h3&gt;&lt;p&gt;Test it on Mobile, and found the top-shadow is not displayed properly. The reason is that I used &lt;code&gt;multiple-shadow&lt;/code&gt; to apply &lt;code&gt;Top Shadow&lt;/code&gt; and &lt;code&gt;Bottom Shadow&lt;/code&gt; to the same div. But according to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Box-Shadow MDN Document&lt;/a&gt;, &lt;code&gt;Multiple shadows&lt;/code&gt; is only supported by iOS Safari with &lt;code&gt;-webkit-&lt;/code&gt; prefix. So it doesn’t work properly.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;Polymer-and-Angular-Js-official-implementations&quot;&gt;&lt;a href=&quot;#Polymer-and-Angular-Js-official-implementations&quot; class=&quot;headerlink&quot; title=&quot;Polymer and Angular-Js official implementations&quot;&gt;&lt;/a&gt;Polymer and Angular-Js official implementations&lt;/h3&gt;&lt;p&gt;Before recreate it, I also checked the &lt;a href=&quot;http://www.polymer-project.org/components/paper-elements/demo.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Polymer&lt;/a&gt; and &lt;a href=&quot;https://material.angularjs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Angular JS&lt;/a&gt;, and the result is disappointing. &lt;code&gt;Ploymer&lt;/code&gt; version has better quality than &lt;code&gt;Angular Js&lt;/code&gt; version, &lt;code&gt;Angular JS&lt;/code&gt; one is still very buggy.&lt;/p&gt;
&lt;p&gt;Even they’re functioning, either &lt;code&gt;Polymer&lt;/code&gt; or &lt;code&gt;Angular-JS&lt;/code&gt; is too intrusive or too heavy for simple page to use, such as blog. If you don’t really need these transition animations, to implement these basic effects, CSS3 should be enough.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Working on &lt;code&gt;Hexo&lt;/code&gt; theme customization in past few days. And wish to borrow some concepts from Google’s &lt;a href=&quot;http://www.goo
    
    </summary>
    
      <category term="Design" scheme="http://timnew.me/categories/design/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/design/web/"/>
    
    
      <category term="Design" scheme="http://timnew.me/tags/design/"/>
    
      <category term="Material" scheme="http://timnew.me/tags/material/"/>
    
      <category term="Google" scheme="http://timnew.me/tags/google/"/>
    
      <category term="Html" scheme="http://timnew.me/tags/html/"/>
    
      <category term="CSS" scheme="http://timnew.me/tags/css/"/>
    
      <category term="Shadow" scheme="http://timnew.me/tags/shadow/"/>
    
      <category term="Visual" scheme="http://timnew.me/tags/visual/"/>
    
      <category term="box-shadow" scheme="http://timnew.me/tags/box-shadow/"/>
    
  </entry>
  
  <entry>
    <title>Atom Editor Background Image</title>
    <link href="http://timnew.me/blog/2014/08/14/atom-editor-background-image/"/>
    <id>http://timnew.me/blog/2014/08/14/atom-editor-background-image/</id>
    <published>2014-08-14T15:41:31.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Today spent some time to customize &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; user stylesheet to display the background image for editor.&lt;br&gt;Background image is a feature that I expected so much in either &lt;code&gt;TextMate&lt;/code&gt; or &lt;code&gt;Sublime&lt;/code&gt;.&lt;br&gt;Now finally I have it in &lt;code&gt;Atom&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Finding the class for each html component is a little bit tricky&lt;br&gt;My theme is &lt;a href=&quot;https://github.com/jesseweed/seti-ui&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;seti-ui&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Stylesheet-to-display-background-image&quot;&gt;&lt;a href=&quot;#Stylesheet-to-display-background-image&quot; class=&quot;headerlink&quot; title=&quot;Stylesheet to display background image&quot;&gt;&lt;/a&gt;Stylesheet to display background image&lt;/h2&gt;&lt;figure class=&quot;highlight less&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//.react is needed to avoid impact on mini-editor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.editor&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.react&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// Fix the color strip between gutter and the editing area.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#0e1112&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-class&quot;&gt;.scroll-view&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Align the Background Image with Editing Area&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// I put the background image under ~/.atom/images&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: url(&lt;span class=&quot;string&quot;&gt;&#39;/Users/timnew/.atom/images/batou.jpg&#39;&lt;/span&gt;) no-repeat fixed;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Stretch the image&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// I tried to set it in with other background properties,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// but it doesn&#39;t work. Looks like a bug in Chrome.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-size&lt;/span&gt;: cover;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-class&quot;&gt;.cursor-line&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set cursor-line semi-transparent to make background visible.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Adjust the alpha value to fit your taste.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: rgba(&lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;90&lt;/span&gt;,.&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;selector-class&quot;&gt;.overlayer&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Set overlayer semi-transparent to make background visible.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// Adjust the alpha value to fit your taste.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: rgba(&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;, .&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;) &lt;span class=&quot;meta&quot;&gt;!important&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Screenshots&quot;&gt;&lt;a href=&quot;#Screenshots&quot; class=&quot;headerlink&quot; title=&quot;Screenshots&quot;&gt;&lt;/a&gt;Screenshots&lt;/h2&gt;&lt;h3 id=&quot;Without-TreeView&quot;&gt;&lt;a href=&quot;#Without-TreeView&quot; class=&quot;headerlink&quot; title=&quot;Without TreeView&quot;&gt;&lt;/a&gt;Without TreeView&lt;/h3&gt;&lt;img src=&quot;/blog/2014/08/14/atom-editor-background-image/no_treeview.png&quot; alt=&quot;Without Tree View&quot; title=&quot;Without Tree View&quot;&gt;
&lt;h2 id=&quot;With-TreeView&quot;&gt;&lt;a href=&quot;#With-TreeView&quot; class=&quot;headerlink&quot; title=&quot;With TreeView&quot;&gt;&lt;/a&gt;With TreeView&lt;/h2&gt;&lt;img src=&quot;/blog/2014/08/14/atom-editor-background-image/treeview.png&quot; alt=&quot;With Tree View&quot; title=&quot;With Tree View&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Today spent some time to customize &lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; user stylesheet to display the back
    
    </summary>
    
      <category term="Practice" scheme="http://timnew.me/categories/practice/"/>
    
      <category term="Atom" scheme="http://timnew.me/categories/practice/atom/"/>
    
    
      <category term="css" scheme="http://timnew.me/tags/css/"/>
    
      <category term="editor" scheme="http://timnew.me/tags/editor/"/>
    
      <category term="stylesheet" scheme="http://timnew.me/tags/stylesheet/"/>
    
      <category term="background" scheme="http://timnew.me/tags/background/"/>
    
      <category term="atom" scheme="http://timnew.me/tags/atom/"/>
    
      <category term="image" scheme="http://timnew.me/tags/image/"/>
    
      <category term="less" scheme="http://timnew.me/tags/less/"/>
    
  </entry>
  
  <entry>
    <title>Atom Editor</title>
    <link href="http://timnew.me/blog/2014/08/14/atom-editor/"/>
    <id>http://timnew.me/blog/2014/08/14/atom-editor/</id>
    <published>2014-08-14T11:00:01.000Z</published>
    <updated>2016-03-25T13:00:49.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; is general purpose text editor brought to us by GitHub guys, which is empowered by the loved &lt;code&gt;Node.js&lt;/code&gt; and &lt;code&gt;Chrome&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Someone said &lt;code&gt;Atom&lt;/code&gt; is just another clone of &lt;a href=&quot;http://www.sublimetext.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime&lt;/a&gt;. Well, I don’t quite agree with the saying. I’d like to say &lt;code&gt;Atom&lt;/code&gt; learnt a lot from &lt;code&gt;Sublime&lt;/code&gt;.&lt;br&gt;And I’d like to explain why.&lt;/p&gt;
&lt;p&gt;I think &lt;code&gt;Sublime&lt;/code&gt; itself is a great text editor, powerful to use, easy to learn, ready to be hacked, matured community, tons of plug-ins… almost unlimited possibilities…&lt;/p&gt;
&lt;p&gt;But on the other hand, I think, &lt;code&gt;Sublime&lt;/code&gt; is too sticky to “Text”. Yes, it is a text editor, but it doesn’t mean everything in the editor could only be text-based.&lt;br&gt;Implementing custom UI in &lt;code&gt;Sublime&lt;/code&gt; isn’t a easy job to do. Benefits from HTML based technologies, &lt;code&gt;Atom&lt;/code&gt; has a lot more rich features, CSS3 effects, CSS3 Animations, SVG, and a lot more…&lt;/p&gt;
&lt;p&gt;Along with &lt;a href=&quot;http://brackets.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Brackets&lt;/a&gt;, &lt;a href=&quot;https://c9.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C9&lt;/a&gt;, &lt;code&gt;Atom&lt;/code&gt; is the important candidates of next-gen editors. But among them, only &lt;code&gt;Atom&lt;/code&gt; is a general purpose editor.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;Atom&lt;/code&gt; is still in the eary stage, there are a number of flaws and issues in it. Besides these bugs, the biggest problem of &lt;code&gt;Atom&lt;/code&gt; is performance.&lt;br&gt;Loading a several MB text file or thousands pages document will kill the editor in no time. &lt;ins&gt;(&lt;code&gt;Atom&lt;/code&gt; blocks user to load file larger than &lt;code&gt;2MB&lt;/code&gt;.)&lt;/ins&gt;&lt;/p&gt;
&lt;p&gt;But still, these issues won’t block me from loving it. As a &lt;code&gt;node.js&lt;/code&gt; and &lt;code&gt;Ruby&lt;/code&gt; developer, it is an awesome companion to my work. ❤️&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://atom.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Atom&lt;/a&gt; is general purpose text editor brought to us by GitHub guys, which is 
    
    </summary>
    
      <category term="Practice" scheme="http://timnew.me/categories/practice/"/>
    
      <category term="Atom" scheme="http://timnew.me/categories/practice/atom/"/>
    
    
      <category term="editor" scheme="http://timnew.me/tags/editor/"/>
    
      <category term="atom" scheme="http://timnew.me/tags/atom/"/>
    
      <category term="sublime" scheme="http://timnew.me/tags/sublime/"/>
    
      <category term="brackets" scheme="http://timnew.me/tags/brackets/"/>
    
      <category term="c9" scheme="http://timnew.me/tags/c9/"/>
    
      <category term="cloud 9" scheme="http://timnew.me/tags/cloud-9/"/>
    
      <category term="text" scheme="http://timnew.me/tags/text/"/>
    
  </entry>
  
  <entry>
    <title>Migrate Blog to Hexo</title>
    <link href="http://timnew.me/blog/2014/08/12/migrate-blog-to-hexo/"/>
    <id>http://timnew.me/blog/2014/08/12/migrate-blog-to-hexo/</id>
    <published>2014-08-12T14:59:14.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;This post is a celebration for the migration from &lt;a href=&quot;http://octopress.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Octopress&lt;/a&gt; to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Octopress&lt;/code&gt; has done an excellent job on filling the gap between &lt;code&gt;jekyll&lt;/code&gt; and full function repo based blog engine. But because of the tech stack it is based on. It isn’t really a awesome framework to use.&lt;/p&gt;
&lt;p&gt;The first time I got pissed off by &lt;code&gt;Octopress&lt;/code&gt; was by the end of 2012. Then I come up the idea to rewrite it in &lt;code&gt;Node.js&lt;/code&gt;. But I wasn’t able to make it happen, because I was held by the new project assignment, and didn’t have too many spare time on the blog engine.&lt;/p&gt;
&lt;p&gt;To save effort, I began to customize &lt;code&gt;Octopress&lt;/code&gt; by rewriting some code in &lt;code&gt;Octopress&lt;/code&gt; and &lt;code&gt;Jekyll&lt;/code&gt;, which started the long march of &lt;code&gt;Octopress&lt;/code&gt; customization.&lt;/p&gt;
&lt;p&gt;I did a number of customization on &lt;code&gt;Octopress&lt;/code&gt;, from erb template to Jekyll generators, from &lt;code&gt;Rake&lt;/code&gt; script to TextMate bundles.&lt;/p&gt;
&lt;p&gt;Before I switch to Sublime, I uses TextMate for quite long time. So I customized the &lt;code&gt;Rake&lt;/code&gt; script and TextMate bundle, which enables me to invoke almost every rake command in TextMate with hotkey. I can even rename the blog post file name according to the title in front-matter without leaving TextMate. Besides the functionality, I also customized the templates and the widgets a lot to get better visual effects and reading experience.&lt;/p&gt;
&lt;p&gt;I’ve benefited from these customization a lot. On the other hand, these deep customization blocks me from migrating to &lt;code&gt;Hexo&lt;/code&gt;, a better alternative. Even I have found &lt;code&gt;Hexo&lt;/code&gt; in the early 2013, and believe it is a better blog platform. But it is really costy for me to migrate the blogs away from the Octopress.&lt;/p&gt;
&lt;p&gt;Luckily, after years development, a bunch of tools and libraries came up, which has minimized the gap between &lt;code&gt;Octopress&lt;/code&gt; and &lt;code&gt;Hexo&lt;/code&gt;.&lt;br&gt;After several days effort, finally retired the &lt;code&gt;Octoress&lt;/code&gt; engine, and completed the journey of moving from &lt;code&gt;Octopress&lt;/code&gt; to &lt;code&gt;Hexo&lt;/code&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This post is a celebration for the migration from &lt;a href=&quot;http://octopress.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Octopress&lt;/a&gt; to &lt;a href
    
    </summary>
    
      <category term="Practice" scheme="http://timnew.me/categories/practice/"/>
    
      <category term="Hexo" scheme="http://timnew.me/categories/practice/hexo/"/>
    
    
      <category term="octopress" scheme="http://timnew.me/tags/octopress/"/>
    
      <category term="migration" scheme="http://timnew.me/tags/migration/"/>
    
      <category term="blog" scheme="http://timnew.me/tags/blog/"/>
    
      <category term="hexo" scheme="http://timnew.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Page renders improperly in IE before developer tool has opened</title>
    <link href="http://timnew.me/blog/2014/08/01/page-renders-improperly-in-ie-before-developer-tool-has-opened/"/>
    <id>http://timnew.me/blog/2014/08/01/page-renders-improperly-in-ie-before-developer-tool-has-opened/</id>
    <published>2014-08-01T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Today I found a super annoying issue about IE. Our website works perfectly in any browser except IE. The page isn’t rendered properly in IE 9. Well, this is common, this is the nature of IE. The mysterious issue I found is that once you opened or ever opened the developer tool, open the page or refresh the page, the problem is gone magically!!!!&lt;/p&gt;
&lt;p&gt;As a conclusion, opening the developer tool changes the browser behavior!!!!! What a hell! So you know there is something wrong, but once you try to figure out the error message, you have to open developer tool. Once you open the developer tool, the bug is gone! &lt;strong&gt;DEAD END!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Because I cannot open developer tool, so I have to debug with &lt;code&gt;alert&lt;/code&gt;. It is really a horrible experience to me, and feels like inspecting nuclear reaction with a plain optical magnifier or fixing a high-tech spacecraft with stones and clubs.&lt;/p&gt;
&lt;p&gt;Since it is client-rich page, a lot of javascript is introduced. So I cannot go through the scripts line by line, instead I have to make an assumption to explain the phenomena spotted, then validate it with experiments, finally correct or extend the assumption according the validation result.&lt;/p&gt;
&lt;p&gt;During the process I invalidated a couple of assumptions, some of them are seems very close to the “right answer”, such as “some script is loaded and executed before its dependencies, and developer tool load all the scripts first because it displays all the scripts”.&lt;/p&gt;
&lt;p&gt;After spending a couple of hours on it, I put on eye on a line of code that is really out of my expectation: &lt;code&gt;console.warn&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Code breaks the page rendering&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.warn(&lt;span class=&quot;string&quot;&gt;&#39;__proto__ is not supported by current browser, fallback to hard-copy approach&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;I displays a warning message to console when a workaround is applied. But a tricky fact about IE 9 is that &lt;code&gt;console&lt;/code&gt; isn’t available until developer tool is opened (&lt;a href=&quot;http://msdn.microsoft.com/library/ie/bg182326(v=vs.85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MSDN reference here&lt;/a&gt;))!!!&lt;/p&gt;
&lt;p&gt;The fact that console is not available until developer tools is opened really blows my mind away! (Maybe it is because I have little experience work with IE). As a chrome user, I take console as the universal log system for javascript. But in IE, according to the &lt;a href=&quot;http://msdn.microsoft.com/library/ie/bg182326(v=vs.85&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;document&lt;/a&gt;), the code should check the existence of console every time print a log.&lt;/p&gt;
&lt;p&gt;There is another pitfall here, and I saw someone really post it as answer on &lt;a href=&quot;http://stackoverflow.com/questions/2656730/internet-explorer-console&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StackOverflow&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Bad polyfill implemntation&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;undefined&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.console = &amp;#123; log: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;msg&lt;/span&gt;) &lt;/span&gt;&amp;#123; alert(msg); &amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;We usually access &lt;code&gt;console&lt;/code&gt; as &lt;code&gt;console.log&lt;/code&gt;, feels like &lt;code&gt;console&lt;/code&gt; is a global instance to access. But actually console is an member of &lt;code&gt;window&lt;/code&gt;, its full name should be &lt;code&gt;window.console&lt;/code&gt;. When &lt;code&gt;console&lt;/code&gt; exists, we can definitely reference to it via &lt;code&gt;console&lt;/code&gt;. But if it doesn’t exist, the statement &lt;code&gt;console&lt;/code&gt; cause script error! So the following code doesn’t work:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Pitfalls in console existence check&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;) === &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt;)&amp;#123; &lt;span class=&quot;comment&quot;&gt;// Break the script execution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Never got executed&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt; != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// Break the script execution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Never got executed&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// Break the script execution&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Never got executed&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.console) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;this works!&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;To avoid &lt;code&gt;console&lt;/code&gt; issue, a ployfill could be very useful. Here is a great implementation available as &lt;code&gt;bower&lt;/code&gt; package: &lt;a href=&quot;https://github.com/paulmillr/console-polyfill&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;console-polyfill&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Today I found a super annoying issue about IE. Our website works perfectly in any browser except IE. The page isn’t rendered properly in 
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/programming/web/"/>
    
    
      <category term="javascript" scheme="http://timnew.me/tags/javascript/"/>
    
      <category term="pitfall" scheme="http://timnew.me/tags/pitfall/"/>
    
      <category term="IE" scheme="http://timnew.me/tags/ie/"/>
    
      <category term="developer tool" scheme="http://timnew.me/tags/developer-tool/"/>
    
      <category term="console" scheme="http://timnew.me/tags/console/"/>
    
      <category term="undefined" scheme="http://timnew.me/tags/undefined/"/>
    
      <category term="polyfill" scheme="http://timnew.me/tags/polyfill/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript Prototype Chain Mutator</title>
    <link href="http://timnew.me/blog/2014/07/30/javascript-prototype-chain-mutator/"/>
    <id>http://timnew.me/blog/2014/07/30/javascript-prototype-chain-mutator/</id>
    <published>2014-07-30T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;In JavaScript world, JSON serialization is widely used. When fetching data from server via Ajax, the data is usually represented in JSON; or loading configuration/data from file in Node.js application, the configuration/data is usually in JSON format.&lt;/p&gt;
&lt;p&gt;JSON serialization is powerful and convenient, but there is limitation. For security and other reason, behavior and type information are forbidden in JSON. Functions members are removed when stringify a JavaScript object, also functions are not allowed in JSON.&lt;/p&gt;
&lt;p&gt;Comparing Yaml to Ruby, this limitation isn’t that convenient when writing JavaScript application. For example, to consume the JSON data fetched via ajax from server, I really wish I can invoke some method on the deserialized model.&lt;/p&gt;
&lt;p&gt;Here is simple example:&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Ideal World&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rect&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  constructor: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(width, height)&lt;/span&gt; -&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @width = width &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; width?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @height = height &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  area: &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @width * @height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.get &lt;span class=&quot;string&quot;&gt;&#39;/rect/latest&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(rectJSON)&lt;/span&gt; -&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rect = JSON.parse(rectJSON)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log rect.area() &lt;span class=&quot;comment&quot;&gt;# This code doesn&#39;t work because there is rect is a plain object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The code doesn’t work, because &lt;code&gt;rect&lt;/code&gt; in a plain object, which doesn’t contains any behavior. Someone called the rect &lt;code&gt;DTO&lt;/code&gt;, Data Transfer Object, or POJO, Plain Old Java Object, a concept borrowed from Java world. Here we call it &lt;code&gt;DTO&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To add behaviors to &lt;code&gt;DTO&lt;/code&gt;, there are variant approaches. Such as create a behavior wrapper around the &lt;code&gt;DTO&lt;/code&gt;, or create a new model with behavior and copy all the data from &lt;code&gt;DTO&lt;/code&gt; to model. These practices are borrowed from Java world, or traditional Object Oriented world.&lt;/p&gt;
&lt;p&gt;In fact, in JavaScript, there could be a better and smarter way to achieve that: &lt;code&gt;Object Mutation&lt;/code&gt;, altering object prototype chain on the fly to convert a object into the instance of a specific type. The process is really similar to biologic genetic mutation, converting a species into another by altering the gene, so I borrow the term &lt;code&gt;mutation&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;With the idea, we can achieve this:&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Mutate rect with Mutator&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Rect&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  constructor: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(width, height)&lt;/span&gt; -&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @width = width &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; width?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @height = height &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; height?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  area: &lt;span class=&quot;function&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @width * @height&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.get &lt;span class=&quot;string&quot;&gt;&#39;/rect/latest&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(rectJSON)&lt;/span&gt; -&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  rect = JSON.parse(rectJSON)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mutate(rect, Rect)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log rect.area()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;The key to implement &lt;code&gt;mutate&lt;/code&gt; function is to simulate &lt;code&gt;new&lt;/code&gt; operator behavior, alerting &lt;code&gt;object.__proto__&lt;/code&gt; and apply &lt;code&gt;constructor&lt;/code&gt; to the instance! For more detail, check out the library &lt;a href=&quot;https://github.com/timnew/mutator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mutator&lt;/a&gt; &lt;a href=&quot;https://github.com/timnew/mutator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;https://badge.fury.io/bo/widget.coffee.svg&quot; alt=&quot;Bower version&quot;&gt;&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.org/package/mutator&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;img src=&quot;http://img.shields.io/npm/v/mutator.svg&quot; alt=&quot;NPM version&quot;&gt;&lt;/a&gt;, which is available as both &lt;code&gt;NPM&lt;/code&gt; package and &lt;code&gt;bower&lt;/code&gt; package.&lt;/p&gt;
&lt;p&gt;When implementing the &lt;code&gt;mutator&lt;/code&gt;, in IE, again, in the evil IE, the idea doesn’t work. Before IE 11, JavaScript prototype chain for instance is not accessible. There is nothing equivalent to &lt;code&gt;object.__proto__&lt;/code&gt; in IE 10 and prior. The most similar workaround is doing a hard-copy of all the members, but it still fails in type check and some dynamical usage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Background&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;object.__proto__&lt;/code&gt; is a Mozilla “private” implementation until EcmaScript 6.&lt;br&gt;It is interesting that most JavaScript support it except IE.&lt;br&gt;Luckily, IE 11 introduced some features in EcmaScript 6, &lt;code&gt;object.__proto__&lt;/code&gt; is one of them.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;In JavaScript world, JSON serialization is widely used. When fetching data from server via Ajax, the data is usually represented in JSON;
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="JavaScript" scheme="http://timnew.me/categories/programming/javascript/"/>
    
    
      <category term="inheritance" scheme="http://timnew.me/tags/inheritance/"/>
    
      <category term="node.js" scheme="http://timnew.me/tags/node-js/"/>
    
      <category term="javascript" scheme="http://timnew.me/tags/javascript/"/>
    
      <category term="browser" scheme="http://timnew.me/tags/browser/"/>
    
      <category term="json" scheme="http://timnew.me/tags/json/"/>
    
      <category term="class" scheme="http://timnew.me/tags/class/"/>
    
      <category term="prototype" scheme="http://timnew.me/tags/prototype/"/>
    
      <category term="bower" scheme="http://timnew.me/tags/bower/"/>
    
      <category term="mutation" scheme="http://timnew.me/tags/mutation/"/>
    
      <category term="mutator" scheme="http://timnew.me/tags/mutator/"/>
    
      <category term="ajax" scheme="http://timnew.me/tags/ajax/"/>
    
      <category term="npm" scheme="http://timnew.me/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>converting between HTML 5 data-attribute style hyphen name and javascript camcel-case name</title>
    <link href="http://timnew.me/blog/2014/07/29/converting-between-html-5-data-attribute-style-hyphen-name-and-javascript-camcel-case-name/"/>
    <id>http://timnew.me/blog/2014/07/29/converting-between-html-5-data-attribute-style-hyphen-name-and-javascript-camcel-case-name/</id>
    <published>2014-07-29T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;I found a bug in &lt;a href=&quot;http://bower.io/search/?q=widget.coffee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;widget.coffee&lt;/a&gt; today. To fix the issue, I need the conversion between HTML 5 &lt;code&gt;data-attribute&lt;/code&gt; name and javascript function name, e.g. conversion between &lt;code&gt;data-action-handler&lt;/code&gt; and &lt;code&gt;actionHandler&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By taking jQuery implementation as reference, I come up 2 utility functions for the conversion:&lt;/p&gt;
&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;NameConversion&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Utils =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hyphenToCamelCase: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(hyphen)&lt;/span&gt; -&amp;gt;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Convert &#39;action-handler&#39; to &#39;actionHandler&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hyphen.replace &lt;span class=&quot;regexp&quot;&gt;/-([a-z])/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(match)&lt;/span&gt; -&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      match[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].toUppercase()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  camelCaseToHyphen: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(camelCase)&lt;/span&gt; -&amp;gt;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Convert &#39;actionHandler&#39; to &#39;action-handler&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    camelCase.replace(&lt;span class=&quot;regexp&quot;&gt;/[A-Z]/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-$1&#39;&lt;/span&gt;).toLowerCase()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  attributeToCamelCase: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(attribute)&lt;/span&gt; -&amp;gt;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Convert &#39;data-action-handler&#39; or &#39;action-handler&#39; to &#39;actionHandler&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Utils.hyphenToCamelCase dataAttribute.replace(&lt;span class=&quot;regexp&quot;&gt;/^(data-)?(.*)/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  camelCaseToAttribute: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;(camelCase)&lt;/span&gt; -&amp;gt;&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;# Convert &#39;actionHanlder&#39; to &#39;data-action-handler&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;data-&#39;&lt;/span&gt; + Utils.camelCaseToHyphen(camelCase)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Here is a more solid implementation based on previous one.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;a sloid javascript version&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; Utils = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hyphenToCamelCase&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;hyphen&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hyphen.replace(&lt;span class=&quot;regexp&quot;&gt;/-([a-z])/g&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;match&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; match[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;].toUppercase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;camelCaseToHyphen&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;camelCase&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; camelCase.replace(&lt;span class=&quot;regexp&quot;&gt;/[A-Z]/g&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;-$1&#39;&lt;/span&gt;).toLowerCase();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;attributeToCamelCase&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;attribute&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hyphenToCamelCase(dataAttribute.replace(&lt;span class=&quot;regexp&quot;&gt;/^(data-)?(.*)/&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;$2&#39;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;camelCaseToAttribute&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;camelCase&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;data-&#39;&lt;/span&gt; + camelCaseToHyphen(camelCase);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hyphenToCamelCase: hyphenToCamelCase,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    camelCaseToHyphen: camelCaseToHyphen,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    attributeToCamelCase: attributeToCamelCase,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    camelCaseToAttribute: camelCaseToAttribute&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;I found a bug in &lt;a href=&quot;http://bower.io/search/?q=widget.coffee&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;widget.coffee&lt;/a&gt; today. To fix the iss
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/programming/web/"/>
    
    
      <category term="javascript" scheme="http://timnew.me/tags/javascript/"/>
    
      <category term="html" scheme="http://timnew.me/tags/html/"/>
    
      <category term="name" scheme="http://timnew.me/tags/name/"/>
    
      <category term="hyphen" scheme="http://timnew.me/tags/hyphen/"/>
    
      <category term="conversion" scheme="http://timnew.me/tags/conversion/"/>
    
      <category term="camel-case" scheme="http://timnew.me/tags/camel-case/"/>
    
      <category term="data attribute" scheme="http://timnew.me/tags/data-attribute/"/>
    
  </entry>
  
  <entry>
    <title>Remove Bower from your build script</title>
    <link href="http://timnew.me/blog/2014/07/10/remove-bower-from-your-build-script/"/>
    <id>http://timnew.me/blog/2014/07/10/remove-bower-from-your-build-script/</id>
    <published>2014-07-10T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;The-mysterious-broken-build&quot;&gt;&lt;a href=&quot;#The-mysterious-broken-build&quot; class=&quot;headerlink&quot; title=&quot;The mysterious broken build&quot;&gt;&lt;/a&gt;The mysterious broken build&lt;/h3&gt;&lt;p&gt;This morning, our QA told us that &lt;code&gt;knockout&lt;/code&gt;, a javascript library that we used in our web app is missing on staging environment. Then we checked the package she got from CI server, and the javascript library was indeed not included. But when we tried to generate the package on our local dev box, we found that &lt;code&gt;knockout&lt;/code&gt; is included.&lt;/p&gt;
&lt;p&gt;It is a big surprise to us, because we share the exact same build scripts and environment between dev-boxes and CI agents and because we manage the front-end dependencies with &lt;code&gt;bower&lt;/code&gt;. In our &lt;code&gt;gulp&lt;/code&gt; script, we ask &lt;code&gt;bower&lt;/code&gt; to install the dependencies every time to make sure they are up to date.&lt;/p&gt;
&lt;h3 id=&quot;The-root-cause-of-the-broken-build&quot;&gt;&lt;a href=&quot;#The-root-cause-of-the-broken-build&quot; class=&quot;headerlink&quot; title=&quot;The root cause of the broken build&quot;&gt;&lt;/a&gt;The root cause of the broken build&lt;/h3&gt;&lt;p&gt;After spending hours on diagnosing the CI agents, we finally figure out the reason, a tricky story:&lt;/p&gt;
&lt;p&gt;When the Knockout maintainer released the v3.1 bower package, they made a mistake in &lt;code&gt;bower.json&lt;/code&gt; config file, which packaged the &lt;code&gt;spec&lt;/code&gt; folder instead of the &lt;code&gt;dist&lt;/code&gt; folder. So this package is actually broken, because the main javascript file &lt;code&gt;dist/knockout.js&lt;/code&gt; , described in &lt;code&gt;bower.json&lt;/code&gt; doesn’t exist.&lt;/p&gt;
&lt;p&gt;Later, the engineers realized they made a mistake, and they fixed the issue by releasing a new package. Maybe they think they haven’t changed any script logic, so &lt;strong&gt;they release the new package under the same version number&lt;/strong&gt;, which is the criminal who broke our builds.&lt;/p&gt;
&lt;p&gt;We’re so unlucky that the broken package is downloaded on our CI server when our build script was executed there for the first time. And the broken package is stored in &lt;code&gt;bower&lt;/code&gt; cache at that time.&lt;/p&gt;
&lt;p&gt;Because of Bower’s cache mechanism, the broken package is used unless the version is bumped or cache is expired. This is the reason why our build is broken on the CI server.&lt;/p&gt;
&lt;p&gt;But on our dev box, for some reason, we had run &lt;code&gt;bower cache clean&lt;/code&gt;, which invalidated the cache. So we have a good build on our local dev box. This is the reason why we can generate good package on our dev box.&lt;/p&gt;
&lt;p&gt;It is a very tricky issue when using bower to manage dependencies. Although it is not completely our fault, but it is kind of the worst case then we can face. The build broke silently, there were no error logs or messages that helped to figure out the reason. (Well, we haven’t got a chance to setup the smoke test for our app yet, so it could be kind of our fault.)&lt;/p&gt;
&lt;p&gt;We thought we had been careful enough to clean the &lt;code&gt;bower_components&lt;/code&gt; folder every time, but that prevented us from figuring out the real cause.&lt;/p&gt;
&lt;p&gt;After fixing this issue, discussed with my pair Rafa and we came up some practices that could be helpful to avoid this kind of issue:&lt;/p&gt;
&lt;h3 id=&quot;Best-practices&quot;&gt;&lt;a href=&quot;#Best-practices&quot; class=&quot;headerlink&quot; title=&quot;Best practices&quot;&gt;&lt;/a&gt;Best practices&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Avoid &lt;code&gt;bower install&lt;/code&gt; or any equivalent step (such as &lt;code&gt;gulp-bower&lt;/code&gt;, &lt;code&gt;grunt-bower&lt;/code&gt;, etc.) in the build script&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;bower_components&lt;/code&gt; into the code repository or download the dependencies from our self managed repository for large projects.&lt;/li&gt;
&lt;li&gt;When dependencies are changed, manually install them and make sure they’re good.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After doing this, our build script runs even faster, because we don’t need to check all dependencies are up-to-date every time. This is a bonus from removing &lt;code&gt;bower install&lt;/code&gt; from our build script.&lt;/p&gt;
&lt;h3 id=&quot;Some-thoughts-on-the-package-system&quot;&gt;&lt;a href=&quot;#Some-thoughts-on-the-package-system&quot; class=&quot;headerlink&quot; title=&quot;Some thoughts on the package system&quot;&gt;&lt;/a&gt;Some thoughts on the package system&lt;/h3&gt;&lt;p&gt;Bower components are maintained by the community, and there is no strict quality control to ensure the package is bug-free or being released in an appropriate way. So it could be safer if we can check them manually, and lock them down across environments.&lt;/p&gt;
&lt;p&gt;This could be common issue for all kind of community managed package system. Not just Bower, it could be Maven, Ruby Gem, Node.js package, Python pip package, nuget package or even Docker containers!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;The-mysterious-broken-build&quot;&gt;&lt;a href=&quot;#The-mysterious-broken-build&quot; class=&quot;headerlink&quot; title=&quot;The mysterious broken build&quot;&gt;&lt;/a&gt;The m
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="node.js" scheme="http://timnew.me/categories/programming/node-js/"/>
    
    
      <category term="environment" scheme="http://timnew.me/tags/environment/"/>
    
      <category term="continues integration" scheme="http://timnew.me/tags/continues-integration/"/>
    
      <category term="bower" scheme="http://timnew.me/tags/bower/"/>
    
      <category term="build" scheme="http://timnew.me/tags/build/"/>
    
      <category term="pipeline" scheme="http://timnew.me/tags/pipeline/"/>
    
      <category term="deployment" scheme="http://timnew.me/tags/deployment/"/>
    
      <category term="automation" scheme="http://timnew.me/tags/automation/"/>
    
  </entry>
  
  <entry>
    <title>The battle between Game developers and Game Hackers - Part.1 How HiddenInt works</title>
    <link href="http://timnew.me/blog/2014/06/24/the-battle-between-game-developers-and-game-hackers-part-1-how-hiddenint-works/"/>
    <id>http://timnew.me/blog/2014/06/24/the-battle-between-game-developers-and-game-hackers-part-1-how-hiddenint-works/</id>
    <published>2014-06-24T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;Harvest: Massive Encounter&lt;/code&gt; is a very unique strategic tower defense game published by &lt;a href=&quot;http://www.oxeyegames.com/harvest-massive-encounter/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Oxeye Game Studio&lt;/a&gt;. The game is amazing, but I won’t focus on that. I will discuss something interesting I discovered when hacking the game.&lt;/p&gt;
&lt;p&gt;By hacking the game, I want to lock down the the number of Mineral that I have in the game. Mineral is the only key resource in the game, which is used to build or upgrade structures. Theoretically locking down a value is easy. Scan the memory for specific number for a few times to filter out the list of potential memory addresses. Then try them one by one. And finally figure out the proper address, then locked it down with the game hacking tool. Very standard approach, and supported by most of the game hacking tool.&lt;/p&gt;
&lt;p&gt;But in Harvest, the story is quite different. By searching the mineral value, we can locate a specific address. But we can easily find that the value is only used for display instead of real game state data. In fact, Harvest uses a quite unique approach to protect its game status data! Oxeye guys call it the &lt;code&gt;Hidden Int&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here is the psudo-code explains how the it works:&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;HiddenInt Psudo implementation&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HiddenInt&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; hashedValue;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Random maskGenerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HiddenInt&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; initialValue&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maskGenerator = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Random();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setValue(initialValue);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setValue&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mask = maskGenerator.next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.hashedValue = &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; ^ &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mask; &lt;span class=&quot;comment&quot;&gt;// ^ is xor operator.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getValue&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.hashedValue ^ &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.mask;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setValue(&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// Generate a new mask and hashed value every time when the value is read.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;modifyValue&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; difference&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; = getValue();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt; += difference;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    setValue(&lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ~HiddenInt() &amp;#123; &lt;span class=&quot;comment&quot;&gt;// Destructor&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    delete maskGenerator;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;So from the code, you can see, the plain value is never got stored in memory. Instead, it stored a “hashed” value, which is the plain value xor a random generated mask. And every time, when either the value being read or written, the mask changes. This kills the almost all kind of memory scanning features in all kind of game hacking tool! You cannot find the plain value in the memory, so you have to use “fuzzy scan”, which detects the values changes instead of scanning specific value. Again, the data in memory keeps changing even when the value doesn’t (I’ll explain why it happens later), so “fuzzy scan” doesn’t work either here!! That’s a master kill!&lt;/p&gt;
&lt;p&gt;Besides of keeping mask changing, it also keeps reading the value out and writing it back, which kills most game editing tool “value frozen” feature! Unless you can ensure you freeze the &lt;code&gt;mask&lt;/code&gt; and &lt;code&gt;hashed value&lt;/code&gt; at the same time, or it breaks the value! Since the reading and writing happen in a very high frequency (Again I’ll explain why it happens later), so you have to lock down the value at a specific point, or the locked value will be overwritten immediately.&lt;/p&gt;
&lt;p&gt;Furthermore, since this value is the key game value, which is displayed on Game UI all the time, the &lt;code&gt;getValue()&lt;/code&gt; is called every time when game UI renders! And usually game UI renders in at least 60fps. So the value is read 60 times per second, and the mask changes 60 times per second! (This is why the value keep changing in a high frequency!)&lt;/p&gt;
&lt;p&gt;So this is the almost invincible way to keep key game state data safe from common game hacking tools!&lt;/p&gt;
&lt;p&gt;In the next post, I’ll explain how to find out a bypass to this security mechanism!&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Harvest: Massive Encounter&lt;/code&gt; is a very unique strategic tower defense game published by &lt;a href=&quot;http://www.oxeyegames.com/har
    
    </summary>
    
      <category term="Cracking" scheme="http://timnew.me/categories/cracking/"/>
    
      <category term="Game" scheme="http://timnew.me/categories/cracking/game/"/>
    
    
      <category term="Oxeye" scheme="http://timnew.me/tags/oxeye/"/>
    
      <category term="Harvest" scheme="http://timnew.me/tags/harvest/"/>
    
      <category term="Massive Encounter" scheme="http://timnew.me/tags/massive-encounter/"/>
    
      <category term="HiddenInt" scheme="http://timnew.me/tags/hiddenint/"/>
    
      <category term="Game" scheme="http://timnew.me/tags/game/"/>
    
      <category term="Crack" scheme="http://timnew.me/tags/crack/"/>
    
      <category term="Cheat" scheme="http://timnew.me/tags/cheat/"/>
    
      <category term="Cheat Engine" scheme="http://timnew.me/tags/cheat-engine/"/>
    
      <category term="Bit Slicer" scheme="http://timnew.me/tags/bit-slicer/"/>
    
      <category term="Memory Editing" scheme="http://timnew.me/tags/memory-editing/"/>
    
      <category term="Debugger" scheme="http://timnew.me/tags/debugger/"/>
    
  </entry>
  
  <entry>
    <title>Process.nextTick Implementation in Browser</title>
    <link href="http://timnew.me/blog/2014/06/23/process-nexttick-implementation-in-browser/"/>
    <id>http://timnew.me/blog/2014/06/23/process-nexttick-implementation-in-browser/</id>
    <published>2014-06-23T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Recursion is a common trick that is often used in JavaScript programming. So infinite recursion will cause stack overflow errors.&lt;br&gt;Some languages resolves this issue by introduce automatically tail call optimization, but in JavaScript we need to take care it on our own.&lt;/p&gt;
&lt;p&gt;To solve the issue, &lt;code&gt;Node.js&lt;/code&gt; has the utility functions &lt;code&gt;nextTick&lt;/code&gt; to ensure specific code is invoked after the current function returned.&lt;br&gt;In Browser there is no standard approach to solve this issue, so workarounds are needed.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://github.com/defunctzombie&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Roman Shtylman(@defunctzombie)&lt;/a&gt;, who created the &lt;code&gt;node-process&lt;/code&gt; for &lt;code&gt;Browserify&lt;/code&gt;, which simulate the &lt;code&gt;Node.js&lt;/code&gt; API in browser environment.&lt;br&gt;Here is his implementation:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/defunctzombie/node-process/blob/master/browser.js&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;node-process&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Infinite Recursion&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;process.nextTick = (&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; canSetImmediate = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt; !== &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.setImmediate;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; canPost = &lt;span class=&quot;keyword&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt; !== &lt;span class=&quot;string&quot;&gt;&#39;undefined&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.postMessage &amp;amp;&amp;amp; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canSetImmediate) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;f&lt;/span&gt;) &lt;/span&gt;&amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.setImmediate(f) &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (canPost) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; queue = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;message&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;ev&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; source = ev.source;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((source === &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt; || source === &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;) &amp;amp;&amp;amp; ev.data === &lt;span class=&quot;string&quot;&gt;&#39;process-tick&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ev.stopPropagation();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (queue.length &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fn = queue.shift();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    fn();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;, &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;nextTick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            queue.push(fn);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.postMessage(&lt;span class=&quot;string&quot;&gt;&#39;process-tick&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;*&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;nextTick&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;fn&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        setTimeout(fn, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Here is some comments on the implementation.&lt;/p&gt;
&lt;h3 id=&quot;setTimeout&quot;&gt;&lt;a href=&quot;#setTimeout&quot; class=&quot;headerlink&quot; title=&quot;setTimeout&quot;&gt;&lt;/a&gt;setTimeout&lt;/h3&gt;&lt;p&gt;To simulate the nextTick behavior, &lt;code&gt;setTimeout(fn, 0)&lt;/code&gt; is a well-known and easy to adopt approach. The issue of this method is that &lt;code&gt;setTimeout&lt;/code&gt; function does heavy operations, call it in loop causes significant performance issue. So we should try to use cheaper approach when possible.&lt;/p&gt;
&lt;h3 id=&quot;setImmidate&quot;&gt;&lt;a href=&quot;#setImmidate&quot; class=&quot;headerlink&quot; title=&quot;setImmidate&quot;&gt;&lt;/a&gt;setImmidate&lt;/h3&gt;&lt;p&gt;There is a function called &lt;code&gt;setImmediate&lt;/code&gt;, which behaves quite similar to &lt;code&gt;nextTick&lt;/code&gt; but with a few differences when dealing with IO stuff. But in browser environment, there is no IO issue, so we can definitely replace the &lt;code&gt;nextTick&lt;/code&gt; with it.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Immediates are queued in the order created, and are popped off the queue once per loop iteration. This is different from process.nextTick which will execute process.maxTickDepth queued callbacks per iteration. setImmediate will yield to the event loop after firing a queued callback to make sure I/O is not being starved. While order is preserved for execution, other I/O events may fire between any two scheduled immediate callbacks.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;setImmediate(callback, [arg], [...])&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://nodejs.org/api/timers.html#timers_setimmediate_callback_arg&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;The &lt;code&gt;setImmediate&lt;/code&gt; function is perfect replacement for &lt;code&gt;nextTick&lt;/code&gt;, but it is not supported by all the browsers. Only &lt;code&gt;IE 10&lt;/code&gt; and &lt;code&gt;Node.js 0.10.+&lt;/code&gt; supports it. Chrome, Firefox, Opera and all mobile browsers don’t.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;Note: This method is not expected to become standard, and is only implemented by recent builds of Internet Explorer and Node.js 0.10+. It meets resistance both from Gecko (Firefox) and Webkit (Google/Apple).&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;window.setImmediate&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.setImmediate&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MDN&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;window-postMessage&quot;&gt;&lt;a href=&quot;#window-postMessage&quot; class=&quot;headerlink&quot; title=&quot;window.postMessage&quot;&gt;&lt;/a&gt;window.postMessage&lt;/h3&gt;&lt;p&gt;&lt;code&gt;window.postMessage&lt;/code&gt; enable developer to access message queue in the browser. By adding some additional code, we can simulate nextTick behavior based on message queue. It works in most modern browser, except &lt;code&gt;IE 8&lt;/code&gt;. In &lt;code&gt;IE 8&lt;/code&gt;, the API is implemented in a  synchronous way, which introduce an extra level of stack-push, so it cannot be used to simulate &lt;code&gt;nextTick&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Overall, there is no perfect workaround to the &lt;code&gt;nextTick&lt;/code&gt; issue for now. All the solutions have different limitations, we can only hope that this issue can be resolved in the future ECMAScript standard.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Recursion is a common trick that is often used in JavaScript programming. So infinite recursion will cause stack overflow errors.&lt;br&gt;Some
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Web" scheme="http://timnew.me/categories/programming/web/"/>
    
    
      <category term="node.js" scheme="http://timnew.me/tags/node-js/"/>
    
      <category term="browser" scheme="http://timnew.me/tags/browser/"/>
    
      <category term="nextTick" scheme="http://timnew.me/tags/nexttick/"/>
    
      <category term="infinite recursion" scheme="http://timnew.me/tags/infinite-recursion/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 0.6.1 SDK recognition issue when using Android SDK 19 and Gradle</title>
    <link href="http://timnew.me/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/"/>
    <id>http://timnew.me/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/</id>
    <published>2014-06-20T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;A few days ago I upgraded my Android Studio to version 0.6.1. And migrated my android project build system from Maven to Gradle. Then nightmare happened!&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/android_studio_version.png&quot; alt=&quot;Android Studio Version&quot; title=&quot;Android Studio Version&quot;&gt;
&lt;p&gt;It looks there are some issue with Android Studio version 0.6.1, which cannot recognize the jar files in Android SDK 19 (4.4 Kit Kat). As a consequence that all the Android fundemantal classes are not recognized properly, which makes IDEA almost impossible to be used.&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/classes_not_recognized.png&quot; alt=&quot;Classes Not Recognized&quot; title=&quot;Classes Not Recognized&quot;&gt;
&lt;p&gt;After spending days on googling and trying, I realize the issue is caused that Android Studio doesn’t recognize the sdk 19 content properly.&lt;/p&gt;
&lt;p&gt;Here is the content of Android SDK 19 that Android Studio 0.6.1 identified:&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/sdk_in_android_studio.png&quot; alt=&quot;SDK in Android Studio&quot; title=&quot;SDK in Android Studio&quot;&gt;
&lt;p&gt;As comparison, here is a list of proper content of Andrdoid SDK 19 with Google API:&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/sdk_in_idea.png&quot; alt=&quot;SDK in IDEA&quot; title=&quot;SDK in IDEA&quot;&gt;
&lt;p&gt;Here is a list of proper content of Andrdoid SDK 19 retrived from Maven Repository:&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/maven_sdk_in_idea.png&quot; alt=&quot;Maven SDK&quot; title=&quot;Maven SDK&quot;&gt;
&lt;p&gt;In the list, you can easily figure out that the &lt;code&gt;android.jar&lt;/code&gt; file is missing! It is the reason why the classes are not properly recognized! Even more if you compare the list against the JDK 1.6, you will find that most of the content are the same.&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/jdk.png&quot; alt=&quot;JDK&quot; title=&quot;JDK&quot;&gt;
&lt;p&gt;Ideally, to fix this issue should be quite easy. Android Studio provides a &lt;code&gt;Project Settings&lt;/code&gt; dialog allow developer to adjust the SDK configurations.&lt;/p&gt;
&lt;p&gt;Project Settings Dialog:&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/project_settings.png&quot; alt=&quot;Project Settings&quot; title=&quot;Project Settings&quot;&gt;
&lt;p&gt;But for Gradle projects, Android Studio displays a greately simplified project settings dialog instead of the original one, which doesn’t allow developer to config the SDK in dialog any longer.&lt;/p&gt;
&lt;p&gt;Gradle Project Settings Dialog:&lt;/p&gt;
&lt;img src=&quot;/blog/2014/06/20/android-studio-0-6-1-sdk-recognition-issue-when-using-android-sdk-19-and-gradle/gradle_project_settings.png&quot; alt=&quot;Project Settings&quot; title=&quot;Project Settings&quot;&gt;
&lt;p&gt;Still now, I figured out several potentisal workarounds to this issue, hope these helps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Downgrade the SDK version from 19 to 18 fixes the issue.&lt;br&gt;If you not really needs SDK 19 features, try to downgrade the SDK version to 18 to fix the issue.&lt;/li&gt;
&lt;li&gt;Use IntelliJ instead of Android Studio&lt;br&gt;I encounters a different issue when using IDEA, it fails to sync the Gradle file.&lt;/li&gt;
&lt;li&gt;Use Maven or ANT instead of Gradle&lt;br&gt;Gradle is powerful, but there are too many environment issues when using with IDEs… Maven is relatively more stable.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I haven’t figure out a perfect solution to this issue, just hope the Google can fix the issue as soon as possible.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;A few days ago I upgraded my Android Studio to version 0.6.1. And migrated my android project build system from Maven to Gradle. Then nig
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Android" scheme="http://timnew.me/categories/programming/android/"/>
    
    
      <category term="android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="android studio" scheme="http://timnew.me/tags/android-studio/"/>
    
      <category term="sdk" scheme="http://timnew.me/tags/sdk/"/>
    
      <category term="gradle" scheme="http://timnew.me/tags/gradle/"/>
    
      <category term="android.jar" scheme="http://timnew.me/tags/android-jar/"/>
    
      <category term="jar" scheme="http://timnew.me/tags/jar/"/>
    
  </entry>
  
  <entry>
    <title>Is Android API document on ConsumerIrManager lying?</title>
    <link href="http://timnew.me/blog/2014/05/28/is-android-api-document-on-consumerirmanager-lying/"/>
    <id>http://timnew.me/blog/2014/05/28/is-android-api-document-on-consumerirmanager-lying/</id>
    <published>2014-05-28T00:00:00.000Z</published>
    <updated>2014-08-23T10:07:47.000Z</updated>
    
    <content type="html">&lt;p&gt;Just found a shocking fact that Android API document on &lt;code&gt;ConsumerIrManger.transmit&lt;/code&gt; method is wrong!&lt;/p&gt;
&lt;p&gt;KitKat has realised its own Infrared blaster API, which is incompatible with legacy Samsung private API. So I was working on &lt;a href=&quot;https://github.com/timnew/AndroidInfrared&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Infrared Library&lt;/a&gt; to make it adapted automatically on both Samsung private API and &lt;code&gt;Kit Kat&lt;/code&gt;official API.&lt;/p&gt;
&lt;p&gt;After I finished the coding according the document, I found the app broke on my Galaxy Note 3 with &lt;code&gt;Kit Kat&lt;/code&gt;. It works perfect when running on &lt;code&gt;Jelly Bean&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And I figured out an issue that it takes longer time to transmit the same seqeunce when I upgraded API. (When IR blaster is working, the LED indicator on the phone turns blue. And I found the time of indicator turning blue is significant longer than before.) And my &lt;a href=&quot;https://github.com/timnew/IRRecorder&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IRRecorder&lt;/a&gt; cannot recognize the sequence sent by my phone any longer.&lt;/p&gt;
&lt;p&gt;After spent several hours, I figured out the reason. The pattern was encoded in a wrong way. But I’m pretty sure that I strictly followed the API document.&lt;/p&gt;
&lt;p&gt;So I get a conculusion that &lt;strong&gt;the &lt;code&gt;ConsumerIrManager&lt;/code&gt; implementation on Samsung Note 3 is different to what described in Android API document.&lt;/strong&gt; However I’m not sure the reason is that the Android document is lying or Samsung implemented the driver in a wrong way.&lt;/p&gt;
&lt;p&gt;Here is the technical details of the issue and its solution:&lt;/p&gt;
&lt;p&gt;IR Command is trasmitted by turnning the IR blaster LED on and off for a certain period of time. So each IR command can be represented by a series of time periods, which indicates how long the led is on or off. The difference between Samsung API and Kit Kat APi is that how the time is mesured.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;carrierFrequency&lt;/strong&gt; The IR carrier frequency in Hertz.&lt;br&gt;&lt;strong&gt;pattern&lt;/strong&gt; The alternating on/off pattern in microseconds to transmit.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;ConsumerIrManager.transmit(int carrierFrequency, int[] pattern)&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;https://developer.android.com/reference/android/hardware/ConsumerIrManager.html#transmit(int,%20int[])&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Developer Reference&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;p&gt;According to the &lt;a href=&quot;https://developer.android.com/reference/android/hardware/ConsumerIrManager.html#transmit(int,%20int[]&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Developer Refernece&lt;/a&gt;), the time in KitKat is measured in the unit of microseconds.&lt;/p&gt;
&lt;p&gt;But for Samsung, the time is mesured by the number of cycles. Take NEC encoding as example, the frequency is 38kHz. So the cycle time &lt;code&gt;T ~= 26us&lt;/code&gt;. BIT_MARK is &lt;code&gt;21 cycles&lt;/code&gt;, the period of time is around &lt;code&gt;26us x 21 ~= 546us&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So ideally, regardless of lead-in and lead-out sequence, to send the code &lt;code&gt;0xA&lt;/code&gt; in NEC encoding, Samsung API needs &lt;code&gt;21 60 21 21 21 60 21 21&lt;/code&gt;; and Kit Kat API needs &lt;code&gt;560 1600 560 560 560 1600 560 560&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;But accroding to my experience, the Android Developer Reference is wrong. &lt;strong&gt;Even in KitKat, the time sequence is also measure by number of cycles instead of the number of microseconds!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;So to fix the issue, you need some mathmatical work. Here is the conversion formula:&lt;/p&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;n = t / T = t * f / &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n: &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; cycles&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;t: &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; microseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T: &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; cycle &lt;span class=&quot;built_in&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; microseconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;f: &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; transmitting frequency &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Hertz&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Just found a shocking fact that Android API document on &lt;code&gt;ConsumerIrManger.transmit&lt;/code&gt; method is wrong!&lt;/p&gt;
&lt;p&gt;KitKat has realise
    
    </summary>
    
      <category term="Programming" scheme="http://timnew.me/categories/programming/"/>
    
      <category term="Android" scheme="http://timnew.me/categories/programming/android/"/>
    
    
      <category term="error" scheme="http://timnew.me/tags/error/"/>
    
      <category term="android" scheme="http://timnew.me/tags/android/"/>
    
      <category term="infrared" scheme="http://timnew.me/tags/infrared/"/>
    
      <category term="api" scheme="http://timnew.me/tags/api/"/>
    
      <category term="document" scheme="http://timnew.me/tags/document/"/>
    
      <category term="Samsung" scheme="http://timnew.me/tags/samsung/"/>
    
      <category term="lying" scheme="http://timnew.me/tags/lying/"/>
    
      <category term="kit kat" scheme="http://timnew.me/tags/kit-kat/"/>
    
  </entry>
  
</feed>
